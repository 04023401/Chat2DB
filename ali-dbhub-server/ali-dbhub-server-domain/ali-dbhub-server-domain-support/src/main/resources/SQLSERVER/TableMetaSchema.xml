<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.alibaba.dbhub.server.domain.support.dialect.sqlserver.mapper.SqlServerMetaSchemaMapper">
    <resultMap id="BaseTableResultMap" type="com.alibaba.dbhub.server.domain.support.model.Table">
        <result property="name" jdbcType="CHAR" column="table_name"/>
        <result property="comment" jdbcType="CHAR" column="table_comment"/>
    </resultMap>
    <resultMap id="BaseTableColumnResultMap" type="com.alibaba.dbhub.server.domain.support.model.TableColumn">
        <result property="name" jdbcType="CHAR" column="COLUMN_NAME"/>
        <result property="tableName" jdbcType="CHAR" column="TABLE_NAME"/>
        <result property="comment" jdbcType="CHAR" column="COLUMN_COMMENT"/>
        <result property="columnType" jdbcType="CHAR" column="COLUMN_TYPE"/>
        <result property="dataType" jdbcType="CHAR" column="DATA_TYPE"/>
        <result property="defaultValue" jdbcType="CHAR" column="COLUMN_DEFAULT"/>
        <result property="nullable" jdbcType="CHAR" column="IS_NULLABLE"
                typeHandler="com.alibaba.dbhub.server.domain.support.dialect.common.handler.BooleanTypeHandler"/>
        <result property="autoIncrement" jdbcType="CHAR" column="EXTRA"
                typeHandler="com.alibaba.dbhub.server.domain.support.dialect.mysql.handler.MysqlExtraTypeHandler"/>
        <result property="primaryKey" jdbcType="CHAR" column="COLUMN_KEY"
                typeHandler="com.alibaba.dbhub.server.domain.support.dialect.mysql.handler.MysqlColumnKeyHandler"/>
       <!-- <result property="precision" jdbcType="INTEGER" column="numeric_precision"/>
         <result property="scale" jdbcType="INTEGER" column="numeric_scale"/>
         <result property="ordinalPosition" jdbcType="INTEGER" column="ordinal_position"/> -->
     </resultMap>
     <resultMap id="TableIndexColumnUnionResultMap"
                type="com.alibaba.dbhub.server.domain.support.model.TableIndexColumn">
         <result property="indexName" jdbcType="CHAR" column="INDEX_NAME"/>
         <result property="tableName" jdbcType="CHAR" column="TABLE_NAME"/>
         <result property="columnName" jdbcType="CHAR" column="COLUMN_NAME"/>
         <result property="collation" jdbcType="CHAR" column="COLLATION"
                 typeHandler="com.alibaba.dbhub.server.domain.support.dialect.mysql.handler.MysqlCollationTypeHandler"/>
         <result property="ordinalPosition" jdbcType="CHAR" column="SEQ_IN_INDEX"/>
         <result property="type" jdbcType="CHAR" column="NON_UNIQUE"
                 typeHandler="com.alibaba.dbhub.server.domain.support.dialect.mysql.handler.MysqlIndexTypeHandler"/>
         <result property="comment" jdbcType="CHAR" column="INDEX_COMMENT"/>
     </resultMap>

     <select id="showDatabases" resultType="java.lang.String">
         SELECT name FROM sys.databases
     </select>

     <select id="schemas" resultType="java.lang.String">
         USE ${databaseName};
         SELECT schema_name(schema_id) AS schemaName
         FROM sys.schemas;
     </select>

     <select id="showCreateTable" resultType="java.lang.String">
         SELECT ${tableSchema}.ufn_GetCreateTableScript(#{tableSchema}, #{tableName}) AS CreateTableScript;
     </select>

     <update id="dropDDLFunction">
         drop function ${tableSchema}.ufn_GetCreateTableScript
     </update>
     <update id="createDDLFunction" >
         CREATE FUNCTION ${tableSchema}.ufn_GetCreateTableScript
         (
         @schema_name NVARCHAR(128),
         @table_name NVARCHAR(128)
         )
         RETURNS NVARCHAR(MAX)
         AS
         BEGIN
         DECLARE @CreateTableScript NVARCHAR(MAX);
         DECLARE @IndexScripts NVARCHAR(MAX) = '';
         DECLARE @ColumnDescriptions NVARCHAR(MAX) = N'';
         SELECT
         @CreateTableScript = CONCAT(
         'CREATE TABLE [', s.name, '].[' , t.name, '] (',
         STUFF(
         (
         SELECT
         ', [' + c.name + '] ' + tp.name +
         CASE WHEN tp.name IN ('varchar', 'nvarchar', 'char', 'nchar') THEN
         '(' + IIF(c.max_length = -1, 'MAX', CAST(c.max_length AS NVARCHAR(10))) + ')'
         WHEN tp.name IN ('decimal', 'numeric') THEN
         '(' + CAST(c.precision AS NVARCHAR(10)) + ', ' + CAST(c.scale AS NVARCHAR(10)) + ')'
         ELSE
         ''
         END + ' ' +
         CASE WHEN c.is_nullable = 1 THEN 'NULL' ELSE 'NOT NULL' END
         FROM
         sys.columns c
         JOIN sys.types tp ON c.user_type_id = tp.user_type_id
         WHERE
         c.object_id = t.object_id
         FOR XML PATH(''), TYPE
         ).value('/', 'nvarchar(max)'), 1, 1, ''),
         ');'
         )
         FROM
         sys.tables t
         JOIN sys.schemas s ON t.schema_id = s.schema_id
         WHERE
         t.name = @table_name
         AND s.name = @schema_name;

         SELECT @IndexScripts = @IndexScripts + 'CREATE ' +
         CASE WHEN i.is_unique = 1 THEN 'UNIQUE ' ELSE '' END +
         i.type_desc + ' INDEX [' + i.name + '] ON [' + s.name + '].[' + t.name + '] (' +
         STUFF(
         (
         SELECT
         ', [' + c.name + ']' + CASE WHEN ic.is_descending_key = 1 THEN ' DESC' ELSE ' ASC' END
         FROM
         sys.index_columns ic
         JOIN sys.columns c ON ic.object_id = c.object_id AND ic.column_id = c.column_id
         WHERE
         ic.object_id = i.object_id
         AND ic.index_id = i.index_id
         ORDER BY
         ic.key_ordinal  FOR XML PATH('')
         ), 1, 1, '') + ')' +
         CASE WHEN i.has_filter = 1 THEN ' WHERE ' + i.filter_definition ELSE '' END + ';' + CHAR(13) + CHAR(10)
         FROM
         sys.indexes i
         JOIN sys.tables t ON i.object_id = t.object_id
         JOIN sys.schemas s ON t.schema_id = s.schema_id
         WHERE
         i.type > 0
         -- AND i.is_primary_key = 0
         AND t.name = @table_name
         AND s.name = @schema_name;

         SELECT
         @ColumnDescriptions += 'EXEC sp_addextendedproperty @name=N''MS_Description'', @value=N''' + CAST(p.value AS NVARCHAR(MAX)) + ''', @level0type=N''SCHEMA'', @level0name=N''' + @schema_name + ''', @level1type=N''TABLE'', @level1name=N''' + @table_name + ''', @level2type=N''COLUMN'', @level2name=N''' + c.name + ''';' + CHAR(13) + CHAR(10)
         FROM
         sys.extended_properties p
         JOIN sys.columns c ON p.major_id = c.object_id AND p.minor_id = c.column_id
         JOIN sys.tables t ON c.object_id = t.object_id
         JOIN sys.schemas s ON t.schema_id = s.schema_id
         WHERE
         p.class = 1
         AND t.name = @table_name
         AND s.name = @schema_name;

         SET @CreateTableScript = @CreateTableScript + CHAR(13) + CHAR(10) + @IndexScripts +  CHAR(13) + CHAR(10)+ @ColumnDescriptions+  CHAR(10);
         RETURN @CreateTableScript;
         END
     </update>



     <update id="dropTable">
         drop table ${databaseName}.${tableName};
     </update>

     <select id="selectTableCount" resultType="java.lang.Integer">
         SELECT count(*)
         FROM sys.TABLES
         where schema_id = #{databaseName};
     </select>

     <select id="selectTables" resultMap="BaseTableResultMap">
         select t.name as table_name , ep.value as table_comment
         from sys.tables t left join sys.extended_properties ep on (t.object_id = ep.major_id AND ep.minor_id =
         0), sys.schemas s where t.schema_id = s.schema_id and s.name = #{tableSchema}
         <if test="tableName != null">
             AND t.name=#{tableName,jdbcType=VARCHAR}
         </if>
         ;
     </select>

     <select id="selectColumns" resultMap="BaseTableColumnResultMap">
         select c.ORDINAL_POSITION as ordinal_position,
         c.COLUMN_NAME as COLUMN_NAME,
         c.DATA_TYPE as DATA_TYPE,
         c.CHARACTER_MAXIMUM_LENGTH as Length,
         c.NUMERIC_SCALE as scale,
         c.NUMERIC_PRECISION as numeric_precision,
         c.IS_NULLABLE as IS_NULLABLE,
         sc.is_identity as COLUMN_KEY,
         c.COLUMN_DEFAULT as COLUMN_DEFAULT,
         c.COLLATION_NAME as collation_name,
         ep.value as COLUMN_COMMENT
         from
         INFORMATION_SCHEMA.COLUMNS c left join sys.columns sc on
         (sc.object_id = object_id(c.TABLE_NAME) and sc.name = c.COLUMN_NAME ) left join sys.extended_properties ep on
         (sc.object_id = ep.major_id AND sc.column_id = ep.minor_id)
         where c.TABLE_NAME = #{tableName} and
         c.TABLE_CATALOG = #{databaseName} and
         c.TABLE_SCHEMA = #{tableSchema} ;
     </select>

     <select id="selectTableIndexes" resultMap="TableIndexColumnUnionResultMap">
         SELECT    idx.name AS INDEX_NAME,
         col.name AS COLUMN_NAME,
         tab.name AS TABLE_NAME,
         idx.type_desc as INDEX_COMMENT,
         idxCol.is_descending_key as is_descending_key,
         idxCol.is_included_column as is_included_column,
         idx.is_unique as NON_UNIQUE
         FROM    sys.indexes idx  JOIN sys.index_columns idxCol
         ON    (idx.object_id = idxCol.object_id      AND idx.index_id = idxCol.index_id      AND idx.is_unique_constraint = 0      and is_primary_key = 0)  JOIN sys.tables tab          ON    (idx.object_id = tab.object_id)  JOIN sys.columns col          ON    (idx.object_id = col.object_id      AND idxCol.column_id = col.column_id)
         WHERE    tab.name = #{tableName};
     </select>
 </mapper>