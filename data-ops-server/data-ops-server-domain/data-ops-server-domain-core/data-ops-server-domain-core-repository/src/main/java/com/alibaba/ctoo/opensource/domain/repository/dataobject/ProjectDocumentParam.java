package com.alibaba.ctoo.opensource.domain.repository.dataobject;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

/**
 * This class was generated by Ali-Generator
 * @author zhuangjiaju
 */
public class ProjectDocumentParam {
    /**
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     *
     * @mbg.generated
     */
    @Deprecated
    protected boolean distinct;

    /**
     *
     * @mbg.generated
     */
    protected boolean page;

    /**
     *
     * @mbg.generated
     */
    protected int pageIndex;

    /**
     *
     * @mbg.generated
     */
    protected int pageSize;

    /**
     *
     * @mbg.generated
     */
    protected int pageStart;

    /**
     *
     * @mbg.generated
     */
    protected String distinctSql;

    /**
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     *
     * @mbg.generated
     */
    public ProjectDocumentParam() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * @param orderCondition
     * @param sortType
     * @return
     *
     * @mbg.generated
     */
    public ProjectDocumentParam appendOrderByClause(OrderCondition orderCondition, SortType sortType) {
        if (null != orderByClause) {
            orderByClause = orderByClause + ", " + orderCondition.getColumnName() + " " + sortType.getValue();
        } else {
            orderByClause = orderCondition.getColumnName() + " " + sortType.getValue();
        }
        return this;
    }

    /**
     * @return
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * @param distinct
     *
     * @mbg.generated
     */
    @Deprecated
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * @return
     *
     * @mbg.generated
     */
    @Deprecated
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * @param page
     * @return
     *
     * @mbg.generated
     */
    public ProjectDocumentParam setPage(boolean page) {
        this.page = page;
        return this;
    }

    /**
     * @return
     *
     * @mbg.generated
     */
    public boolean isPage() {
        return page;
    }

    /**
     * @return
     *
     * @mbg.generated
     */
    public int getPageIndex() {
        return pageIndex;
    }

    /**
     * @param pageSize
     * @return
     *
     * @mbg.generated
     */
    public ProjectDocumentParam setPageSize(int pageSize) {
        this.pageSize = pageSize < 1 ? 10 : pageSize;
        this.pageIndex = pageStart < 1 ? 0 : (pageStart - 1) * this.pageSize;
        return this;
    }

    /**
     * @return
     *
     * @mbg.generated
     */
    public int getPageSize() {
        return pageSize;
    }

    /**
     * @param pageStart
     * @return
     *
     * @mbg.generated
     */
    public ProjectDocumentParam setPageStart(int pageStart) {
        this.pageStart = pageStart < 1 ? 1 : pageStart;
        this.pageIndex = (this.pageStart - 1) * this.pageSize;
        return this;
    }

    /**
     * @return
     *
     * @mbg.generated
     */
    public int getPageStart() {
        return pageStart;
    }

    /**
     * @param pageStart
     * @param pageSize
     *
     * @mbg.generated
     */
    public void setPagination(int pageStart, int pageSize) {
        this.page = true;
        this.pageSize = pageSize < 1 ? 10 : pageSize;
        this.pageIndex = pageStart < 1 ? 0 : (pageStart - 1) * this.pageSize;
    }

    /**
     * @param condition
     * @return
     *
     * @mbg.generated
     */
    public ProjectDocumentParam appendDistinct(OrderCondition condition) {
        if (null != distinctSql){
            distinctSql = distinctSql + ", " + condition.getColumnName();
        } else {
            distinctSql = condition.getColumnName();
        }
        return this;
    }

    /**
     * @return
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * @param criteria
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * @return
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * @return
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * @return
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     *
     * @mbg.generated
     */
    protected abstract static class AbstractGeneratedCriteria {
        protected List<Criterion> criteria;

        protected AbstractGeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andGmtCreateIsNull() {
            addCriterion("gmt_create is null");
            return (Criteria) this;
        }

        public Criteria andGmtCreateIsNotNull() {
            addCriterion("gmt_create is not null");
            return (Criteria) this;
        }

        public Criteria andGmtCreateEqualTo(Date value) {
            addCriterion("gmt_create =", value, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateNotEqualTo(Date value) {
            addCriterion("gmt_create <>", value, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateGreaterThan(Date value) {
            addCriterion("gmt_create >", value, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateGreaterThanOrEqualTo(Date value) {
            addCriterion("gmt_create >=", value, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateLessThan(Date value) {
            addCriterion("gmt_create <", value, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateLessThanOrEqualTo(Date value) {
            addCriterion("gmt_create <=", value, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateIn(List<Date> values) {
            addCriterion("gmt_create in", values, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateNotIn(List<Date> values) {
            addCriterion("gmt_create not in", values, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateBetween(Date value1, Date value2) {
            addCriterion("gmt_create between", value1, value2, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateNotBetween(Date value1, Date value2) {
            addCriterion("gmt_create not between", value1, value2, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedIsNull() {
            addCriterion("gmt_modified is null");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedIsNotNull() {
            addCriterion("gmt_modified is not null");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedEqualTo(Date value) {
            addCriterion("gmt_modified =", value, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedNotEqualTo(Date value) {
            addCriterion("gmt_modified <>", value, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedGreaterThan(Date value) {
            addCriterion("gmt_modified >", value, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedGreaterThanOrEqualTo(Date value) {
            addCriterion("gmt_modified >=", value, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedLessThan(Date value) {
            addCriterion("gmt_modified <", value, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedLessThanOrEqualTo(Date value) {
            addCriterion("gmt_modified <=", value, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedIn(List<Date> values) {
            addCriterion("gmt_modified in", values, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedNotIn(List<Date> values) {
            addCriterion("gmt_modified not in", values, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedBetween(Date value1, Date value2) {
            addCriterion("gmt_modified between", value1, value2, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedNotBetween(Date value1, Date value2) {
            addCriterion("gmt_modified not between", value1, value2, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andCreatorIsNull() {
            addCriterion("creator is null");
            return (Criteria) this;
        }

        public Criteria andCreatorIsNotNull() {
            addCriterion("creator is not null");
            return (Criteria) this;
        }

        public Criteria andCreatorEqualTo(String value) {
            addCriterion("creator =", value, "creator");
            return (Criteria) this;
        }

        public Criteria andCreatorNotEqualTo(String value) {
            addCriterion("creator <>", value, "creator");
            return (Criteria) this;
        }

        public Criteria andCreatorGreaterThan(String value) {
            addCriterion("creator >", value, "creator");
            return (Criteria) this;
        }

        public Criteria andCreatorGreaterThanOrEqualTo(String value) {
            addCriterion("creator >=", value, "creator");
            return (Criteria) this;
        }

        public Criteria andCreatorLessThan(String value) {
            addCriterion("creator <", value, "creator");
            return (Criteria) this;
        }

        public Criteria andCreatorLessThanOrEqualTo(String value) {
            addCriterion("creator <=", value, "creator");
            return (Criteria) this;
        }

        public Criteria andCreatorLike(String value) {
            addCriterion("creator like", value, "creator");
            return (Criteria) this;
        }

        public Criteria andCreatorNotLike(String value) {
            addCriterion("creator not like", value, "creator");
            return (Criteria) this;
        }

        public Criteria andCreatorIn(List<String> values) {
            addCriterion("creator in", values, "creator");
            return (Criteria) this;
        }

        public Criteria andCreatorNotIn(List<String> values) {
            addCriterion("creator not in", values, "creator");
            return (Criteria) this;
        }

        public Criteria andCreatorBetween(String value1, String value2) {
            addCriterion("creator between", value1, value2, "creator");
            return (Criteria) this;
        }

        public Criteria andCreatorNotBetween(String value1, String value2) {
            addCriterion("creator not between", value1, value2, "creator");
            return (Criteria) this;
        }

        public Criteria andModifierIsNull() {
            addCriterion("modifier is null");
            return (Criteria) this;
        }

        public Criteria andModifierIsNotNull() {
            addCriterion("modifier is not null");
            return (Criteria) this;
        }

        public Criteria andModifierEqualTo(String value) {
            addCriterion("modifier =", value, "modifier");
            return (Criteria) this;
        }

        public Criteria andModifierNotEqualTo(String value) {
            addCriterion("modifier <>", value, "modifier");
            return (Criteria) this;
        }

        public Criteria andModifierGreaterThan(String value) {
            addCriterion("modifier >", value, "modifier");
            return (Criteria) this;
        }

        public Criteria andModifierGreaterThanOrEqualTo(String value) {
            addCriterion("modifier >=", value, "modifier");
            return (Criteria) this;
        }

        public Criteria andModifierLessThan(String value) {
            addCriterion("modifier <", value, "modifier");
            return (Criteria) this;
        }

        public Criteria andModifierLessThanOrEqualTo(String value) {
            addCriterion("modifier <=", value, "modifier");
            return (Criteria) this;
        }

        public Criteria andModifierLike(String value) {
            addCriterion("modifier like", value, "modifier");
            return (Criteria) this;
        }

        public Criteria andModifierNotLike(String value) {
            addCriterion("modifier not like", value, "modifier");
            return (Criteria) this;
        }

        public Criteria andModifierIn(List<String> values) {
            addCriterion("modifier in", values, "modifier");
            return (Criteria) this;
        }

        public Criteria andModifierNotIn(List<String> values) {
            addCriterion("modifier not in", values, "modifier");
            return (Criteria) this;
        }

        public Criteria andModifierBetween(String value1, String value2) {
            addCriterion("modifier between", value1, value2, "modifier");
            return (Criteria) this;
        }

        public Criteria andModifierNotBetween(String value1, String value2) {
            addCriterion("modifier not between", value1, value2, "modifier");
            return (Criteria) this;
        }

        public Criteria andDeletedIdIsNull() {
            addCriterion("deleted_id is null");
            return (Criteria) this;
        }

        public Criteria andDeletedIdIsNotNull() {
            addCriterion("deleted_id is not null");
            return (Criteria) this;
        }

        public Criteria andDeletedIdEqualTo(Long value) {
            addCriterion("deleted_id =", value, "deletedId");
            return (Criteria) this;
        }

        public Criteria andDeletedIdNotEqualTo(Long value) {
            addCriterion("deleted_id <>", value, "deletedId");
            return (Criteria) this;
        }

        public Criteria andDeletedIdGreaterThan(Long value) {
            addCriterion("deleted_id >", value, "deletedId");
            return (Criteria) this;
        }

        public Criteria andDeletedIdGreaterThanOrEqualTo(Long value) {
            addCriterion("deleted_id >=", value, "deletedId");
            return (Criteria) this;
        }

        public Criteria andDeletedIdLessThan(Long value) {
            addCriterion("deleted_id <", value, "deletedId");
            return (Criteria) this;
        }

        public Criteria andDeletedIdLessThanOrEqualTo(Long value) {
            addCriterion("deleted_id <=", value, "deletedId");
            return (Criteria) this;
        }

        public Criteria andDeletedIdIn(List<Long> values) {
            addCriterion("deleted_id in", values, "deletedId");
            return (Criteria) this;
        }

        public Criteria andDeletedIdNotIn(List<Long> values) {
            addCriterion("deleted_id not in", values, "deletedId");
            return (Criteria) this;
        }

        public Criteria andDeletedIdBetween(Long value1, Long value2) {
            addCriterion("deleted_id between", value1, value2, "deletedId");
            return (Criteria) this;
        }

        public Criteria andDeletedIdNotBetween(Long value1, Long value2) {
            addCriterion("deleted_id not between", value1, value2, "deletedId");
            return (Criteria) this;
        }

        public Criteria andTenantIdIsNull() {
            addCriterion("tenant_id is null");
            return (Criteria) this;
        }

        public Criteria andTenantIdIsNotNull() {
            addCriterion("tenant_id is not null");
            return (Criteria) this;
        }

        public Criteria andTenantIdEqualTo(String value) {
            addCriterion("tenant_id =", value, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdNotEqualTo(String value) {
            addCriterion("tenant_id <>", value, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdGreaterThan(String value) {
            addCriterion("tenant_id >", value, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdGreaterThanOrEqualTo(String value) {
            addCriterion("tenant_id >=", value, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdLessThan(String value) {
            addCriterion("tenant_id <", value, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdLessThanOrEqualTo(String value) {
            addCriterion("tenant_id <=", value, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdLike(String value) {
            addCriterion("tenant_id like", value, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdNotLike(String value) {
            addCriterion("tenant_id not like", value, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdIn(List<String> values) {
            addCriterion("tenant_id in", values, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdNotIn(List<String> values) {
            addCriterion("tenant_id not in", values, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdBetween(String value1, String value2) {
            addCriterion("tenant_id between", value1, value2, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdNotBetween(String value1, String value2) {
            addCriterion("tenant_id not between", value1, value2, "tenantId");
            return (Criteria) this;
        }

        public Criteria andProjectIdIsNull() {
            addCriterion("project_id is null");
            return (Criteria) this;
        }

        public Criteria andProjectIdIsNotNull() {
            addCriterion("project_id is not null");
            return (Criteria) this;
        }

        public Criteria andProjectIdEqualTo(Long value) {
            addCriterion("project_id =", value, "projectId");
            return (Criteria) this;
        }

        public Criteria andProjectIdNotEqualTo(Long value) {
            addCriterion("project_id <>", value, "projectId");
            return (Criteria) this;
        }

        public Criteria andProjectIdGreaterThan(Long value) {
            addCriterion("project_id >", value, "projectId");
            return (Criteria) this;
        }

        public Criteria andProjectIdGreaterThanOrEqualTo(Long value) {
            addCriterion("project_id >=", value, "projectId");
            return (Criteria) this;
        }

        public Criteria andProjectIdLessThan(Long value) {
            addCriterion("project_id <", value, "projectId");
            return (Criteria) this;
        }

        public Criteria andProjectIdLessThanOrEqualTo(Long value) {
            addCriterion("project_id <=", value, "projectId");
            return (Criteria) this;
        }

        public Criteria andProjectIdIn(List<Long> values) {
            addCriterion("project_id in", values, "projectId");
            return (Criteria) this;
        }

        public Criteria andProjectIdNotIn(List<Long> values) {
            addCriterion("project_id not in", values, "projectId");
            return (Criteria) this;
        }

        public Criteria andProjectIdBetween(Long value1, Long value2) {
            addCriterion("project_id between", value1, value2, "projectId");
            return (Criteria) this;
        }

        public Criteria andProjectIdNotBetween(Long value1, Long value2) {
            addCriterion("project_id not between", value1, value2, "projectId");
            return (Criteria) this;
        }

        public Criteria andSourceTypeIsNull() {
            addCriterion("source_type is null");
            return (Criteria) this;
        }

        public Criteria andSourceTypeIsNotNull() {
            addCriterion("source_type is not null");
            return (Criteria) this;
        }

        public Criteria andSourceTypeEqualTo(String value) {
            addCriterion("source_type =", value, "sourceType");
            return (Criteria) this;
        }

        public Criteria andSourceTypeNotEqualTo(String value) {
            addCriterion("source_type <>", value, "sourceType");
            return (Criteria) this;
        }

        public Criteria andSourceTypeGreaterThan(String value) {
            addCriterion("source_type >", value, "sourceType");
            return (Criteria) this;
        }

        public Criteria andSourceTypeGreaterThanOrEqualTo(String value) {
            addCriterion("source_type >=", value, "sourceType");
            return (Criteria) this;
        }

        public Criteria andSourceTypeLessThan(String value) {
            addCriterion("source_type <", value, "sourceType");
            return (Criteria) this;
        }

        public Criteria andSourceTypeLessThanOrEqualTo(String value) {
            addCriterion("source_type <=", value, "sourceType");
            return (Criteria) this;
        }

        public Criteria andSourceTypeLike(String value) {
            addCriterion("source_type like", value, "sourceType");
            return (Criteria) this;
        }

        public Criteria andSourceTypeNotLike(String value) {
            addCriterion("source_type not like", value, "sourceType");
            return (Criteria) this;
        }

        public Criteria andSourceTypeIn(List<String> values) {
            addCriterion("source_type in", values, "sourceType");
            return (Criteria) this;
        }

        public Criteria andSourceTypeNotIn(List<String> values) {
            addCriterion("source_type not in", values, "sourceType");
            return (Criteria) this;
        }

        public Criteria andSourceTypeBetween(String value1, String value2) {
            addCriterion("source_type between", value1, value2, "sourceType");
            return (Criteria) this;
        }

        public Criteria andSourceTypeNotBetween(String value1, String value2) {
            addCriterion("source_type not between", value1, value2, "sourceType");
            return (Criteria) this;
        }

        public Criteria andSourceUrlIsNull() {
            addCriterion("source_url is null");
            return (Criteria) this;
        }

        public Criteria andSourceUrlIsNotNull() {
            addCriterion("source_url is not null");
            return (Criteria) this;
        }

        public Criteria andSourceUrlEqualTo(String value) {
            addCriterion("source_url =", value, "sourceUrl");
            return (Criteria) this;
        }

        public Criteria andSourceUrlNotEqualTo(String value) {
            addCriterion("source_url <>", value, "sourceUrl");
            return (Criteria) this;
        }

        public Criteria andSourceUrlGreaterThan(String value) {
            addCriterion("source_url >", value, "sourceUrl");
            return (Criteria) this;
        }

        public Criteria andSourceUrlGreaterThanOrEqualTo(String value) {
            addCriterion("source_url >=", value, "sourceUrl");
            return (Criteria) this;
        }

        public Criteria andSourceUrlLessThan(String value) {
            addCriterion("source_url <", value, "sourceUrl");
            return (Criteria) this;
        }

        public Criteria andSourceUrlLessThanOrEqualTo(String value) {
            addCriterion("source_url <=", value, "sourceUrl");
            return (Criteria) this;
        }

        public Criteria andSourceUrlLike(String value) {
            addCriterion("source_url like", value, "sourceUrl");
            return (Criteria) this;
        }

        public Criteria andSourceUrlNotLike(String value) {
            addCriterion("source_url not like", value, "sourceUrl");
            return (Criteria) this;
        }

        public Criteria andSourceUrlIn(List<String> values) {
            addCriterion("source_url in", values, "sourceUrl");
            return (Criteria) this;
        }

        public Criteria andSourceUrlNotIn(List<String> values) {
            addCriterion("source_url not in", values, "sourceUrl");
            return (Criteria) this;
        }

        public Criteria andSourceUrlBetween(String value1, String value2) {
            addCriterion("source_url between", value1, value2, "sourceUrl");
            return (Criteria) this;
        }

        public Criteria andSourceUrlNotBetween(String value1, String value2) {
            addCriterion("source_url not between", value1, value2, "sourceUrl");
            return (Criteria) this;
        }

        public Criteria andSourceBranchIsNull() {
            addCriterion("source_branch is null");
            return (Criteria) this;
        }

        public Criteria andSourceBranchIsNotNull() {
            addCriterion("source_branch is not null");
            return (Criteria) this;
        }

        public Criteria andSourceBranchEqualTo(String value) {
            addCriterion("source_branch =", value, "sourceBranch");
            return (Criteria) this;
        }

        public Criteria andSourceBranchNotEqualTo(String value) {
            addCriterion("source_branch <>", value, "sourceBranch");
            return (Criteria) this;
        }

        public Criteria andSourceBranchGreaterThan(String value) {
            addCriterion("source_branch >", value, "sourceBranch");
            return (Criteria) this;
        }

        public Criteria andSourceBranchGreaterThanOrEqualTo(String value) {
            addCriterion("source_branch >=", value, "sourceBranch");
            return (Criteria) this;
        }

        public Criteria andSourceBranchLessThan(String value) {
            addCriterion("source_branch <", value, "sourceBranch");
            return (Criteria) this;
        }

        public Criteria andSourceBranchLessThanOrEqualTo(String value) {
            addCriterion("source_branch <=", value, "sourceBranch");
            return (Criteria) this;
        }

        public Criteria andSourceBranchLike(String value) {
            addCriterion("source_branch like", value, "sourceBranch");
            return (Criteria) this;
        }

        public Criteria andSourceBranchNotLike(String value) {
            addCriterion("source_branch not like", value, "sourceBranch");
            return (Criteria) this;
        }

        public Criteria andSourceBranchIn(List<String> values) {
            addCriterion("source_branch in", values, "sourceBranch");
            return (Criteria) this;
        }

        public Criteria andSourceBranchNotIn(List<String> values) {
            addCriterion("source_branch not in", values, "sourceBranch");
            return (Criteria) this;
        }

        public Criteria andSourceBranchBetween(String value1, String value2) {
            addCriterion("source_branch between", value1, value2, "sourceBranch");
            return (Criteria) this;
        }

        public Criteria andSourceBranchNotBetween(String value1, String value2) {
            addCriterion("source_branch not between", value1, value2, "sourceBranch");
            return (Criteria) this;
        }

        public Criteria andSourcePathIsNull() {
            addCriterion("source_path is null");
            return (Criteria) this;
        }

        public Criteria andSourcePathIsNotNull() {
            addCriterion("source_path is not null");
            return (Criteria) this;
        }

        public Criteria andSourcePathEqualTo(String value) {
            addCriterion("source_path =", value, "sourcePath");
            return (Criteria) this;
        }

        public Criteria andSourcePathNotEqualTo(String value) {
            addCriterion("source_path <>", value, "sourcePath");
            return (Criteria) this;
        }

        public Criteria andSourcePathGreaterThan(String value) {
            addCriterion("source_path >", value, "sourcePath");
            return (Criteria) this;
        }

        public Criteria andSourcePathGreaterThanOrEqualTo(String value) {
            addCriterion("source_path >=", value, "sourcePath");
            return (Criteria) this;
        }

        public Criteria andSourcePathLessThan(String value) {
            addCriterion("source_path <", value, "sourcePath");
            return (Criteria) this;
        }

        public Criteria andSourcePathLessThanOrEqualTo(String value) {
            addCriterion("source_path <=", value, "sourcePath");
            return (Criteria) this;
        }

        public Criteria andSourcePathLike(String value) {
            addCriterion("source_path like", value, "sourcePath");
            return (Criteria) this;
        }

        public Criteria andSourcePathNotLike(String value) {
            addCriterion("source_path not like", value, "sourcePath");
            return (Criteria) this;
        }

        public Criteria andSourcePathIn(List<String> values) {
            addCriterion("source_path in", values, "sourcePath");
            return (Criteria) this;
        }

        public Criteria andSourcePathNotIn(List<String> values) {
            addCriterion("source_path not in", values, "sourcePath");
            return (Criteria) this;
        }

        public Criteria andSourcePathBetween(String value1, String value2) {
            addCriterion("source_path between", value1, value2, "sourcePath");
            return (Criteria) this;
        }

        public Criteria andSourcePathNotBetween(String value1, String value2) {
            addCriterion("source_path not between", value1, value2, "sourcePath");
            return (Criteria) this;
        }

        public Criteria andGmtRefreshIsNull() {
            addCriterion("gmt_refresh is null");
            return (Criteria) this;
        }

        public Criteria andGmtRefreshIsNotNull() {
            addCriterion("gmt_refresh is not null");
            return (Criteria) this;
        }

        public Criteria andGmtRefreshEqualTo(Date value) {
            addCriterion("gmt_refresh =", value, "gmtRefresh");
            return (Criteria) this;
        }

        public Criteria andGmtRefreshNotEqualTo(Date value) {
            addCriterion("gmt_refresh <>", value, "gmtRefresh");
            return (Criteria) this;
        }

        public Criteria andGmtRefreshGreaterThan(Date value) {
            addCriterion("gmt_refresh >", value, "gmtRefresh");
            return (Criteria) this;
        }

        public Criteria andGmtRefreshGreaterThanOrEqualTo(Date value) {
            addCriterion("gmt_refresh >=", value, "gmtRefresh");
            return (Criteria) this;
        }

        public Criteria andGmtRefreshLessThan(Date value) {
            addCriterion("gmt_refresh <", value, "gmtRefresh");
            return (Criteria) this;
        }

        public Criteria andGmtRefreshLessThanOrEqualTo(Date value) {
            addCriterion("gmt_refresh <=", value, "gmtRefresh");
            return (Criteria) this;
        }

        public Criteria andGmtRefreshIn(List<Date> values) {
            addCriterion("gmt_refresh in", values, "gmtRefresh");
            return (Criteria) this;
        }

        public Criteria andGmtRefreshNotIn(List<Date> values) {
            addCriterion("gmt_refresh not in", values, "gmtRefresh");
            return (Criteria) this;
        }

        public Criteria andGmtRefreshBetween(Date value1, Date value2) {
            addCriterion("gmt_refresh between", value1, value2, "gmtRefresh");
            return (Criteria) this;
        }

        public Criteria andGmtRefreshNotBetween(Date value1, Date value2) {
            addCriterion("gmt_refresh not between", value1, value2, "gmtRefresh");
            return (Criteria) this;
        }

        public Criteria andSourceGitTypeIsNull() {
            addCriterion("source_git_type is null");
            return (Criteria) this;
        }

        public Criteria andSourceGitTypeIsNotNull() {
            addCriterion("source_git_type is not null");
            return (Criteria) this;
        }

        public Criteria andSourceGitTypeEqualTo(String value) {
            addCriterion("source_git_type =", value, "sourceGitType");
            return (Criteria) this;
        }

        public Criteria andSourceGitTypeNotEqualTo(String value) {
            addCriterion("source_git_type <>", value, "sourceGitType");
            return (Criteria) this;
        }

        public Criteria andSourceGitTypeGreaterThan(String value) {
            addCriterion("source_git_type >", value, "sourceGitType");
            return (Criteria) this;
        }

        public Criteria andSourceGitTypeGreaterThanOrEqualTo(String value) {
            addCriterion("source_git_type >=", value, "sourceGitType");
            return (Criteria) this;
        }

        public Criteria andSourceGitTypeLessThan(String value) {
            addCriterion("source_git_type <", value, "sourceGitType");
            return (Criteria) this;
        }

        public Criteria andSourceGitTypeLessThanOrEqualTo(String value) {
            addCriterion("source_git_type <=", value, "sourceGitType");
            return (Criteria) this;
        }

        public Criteria andSourceGitTypeLike(String value) {
            addCriterion("source_git_type like", value, "sourceGitType");
            return (Criteria) this;
        }

        public Criteria andSourceGitTypeNotLike(String value) {
            addCriterion("source_git_type not like", value, "sourceGitType");
            return (Criteria) this;
        }

        public Criteria andSourceGitTypeIn(List<String> values) {
            addCriterion("source_git_type in", values, "sourceGitType");
            return (Criteria) this;
        }

        public Criteria andSourceGitTypeNotIn(List<String> values) {
            addCriterion("source_git_type not in", values, "sourceGitType");
            return (Criteria) this;
        }

        public Criteria andSourceGitTypeBetween(String value1, String value2) {
            addCriterion("source_git_type between", value1, value2, "sourceGitType");
            return (Criteria) this;
        }

        public Criteria andSourceGitTypeNotBetween(String value1, String value2) {
            addCriterion("source_git_type not between", value1, value2, "sourceGitType");
            return (Criteria) this;
        }

        public Criteria andGmtRefreshSuccessIsNull() {
            addCriterion("gmt_refresh_success is null");
            return (Criteria) this;
        }

        public Criteria andGmtRefreshSuccessIsNotNull() {
            addCriterion("gmt_refresh_success is not null");
            return (Criteria) this;
        }

        public Criteria andGmtRefreshSuccessEqualTo(Date value) {
            addCriterion("gmt_refresh_success =", value, "gmtRefreshSuccess");
            return (Criteria) this;
        }

        public Criteria andGmtRefreshSuccessNotEqualTo(Date value) {
            addCriterion("gmt_refresh_success <>", value, "gmtRefreshSuccess");
            return (Criteria) this;
        }

        public Criteria andGmtRefreshSuccessGreaterThan(Date value) {
            addCriterion("gmt_refresh_success >", value, "gmtRefreshSuccess");
            return (Criteria) this;
        }

        public Criteria andGmtRefreshSuccessGreaterThanOrEqualTo(Date value) {
            addCriterion("gmt_refresh_success >=", value, "gmtRefreshSuccess");
            return (Criteria) this;
        }

        public Criteria andGmtRefreshSuccessLessThan(Date value) {
            addCriterion("gmt_refresh_success <", value, "gmtRefreshSuccess");
            return (Criteria) this;
        }

        public Criteria andGmtRefreshSuccessLessThanOrEqualTo(Date value) {
            addCriterion("gmt_refresh_success <=", value, "gmtRefreshSuccess");
            return (Criteria) this;
        }

        public Criteria andGmtRefreshSuccessIn(List<Date> values) {
            addCriterion("gmt_refresh_success in", values, "gmtRefreshSuccess");
            return (Criteria) this;
        }

        public Criteria andGmtRefreshSuccessNotIn(List<Date> values) {
            addCriterion("gmt_refresh_success not in", values, "gmtRefreshSuccess");
            return (Criteria) this;
        }

        public Criteria andGmtRefreshSuccessBetween(Date value1, Date value2) {
            addCriterion("gmt_refresh_success between", value1, value2, "gmtRefreshSuccess");
            return (Criteria) this;
        }

        public Criteria andGmtRefreshSuccessNotBetween(Date value1, Date value2) {
            addCriterion("gmt_refresh_success not between", value1, value2, "gmtRefreshSuccess");
            return (Criteria) this;
        }

        public Criteria andSourceFullNameIsNull() {
            addCriterion("source_full_name is null");
            return (Criteria) this;
        }

        public Criteria andSourceFullNameIsNotNull() {
            addCriterion("source_full_name is not null");
            return (Criteria) this;
        }

        public Criteria andSourceFullNameEqualTo(String value) {
            addCriterion("source_full_name =", value, "sourceFullName");
            return (Criteria) this;
        }

        public Criteria andSourceFullNameNotEqualTo(String value) {
            addCriterion("source_full_name <>", value, "sourceFullName");
            return (Criteria) this;
        }

        public Criteria andSourceFullNameGreaterThan(String value) {
            addCriterion("source_full_name >", value, "sourceFullName");
            return (Criteria) this;
        }

        public Criteria andSourceFullNameGreaterThanOrEqualTo(String value) {
            addCriterion("source_full_name >=", value, "sourceFullName");
            return (Criteria) this;
        }

        public Criteria andSourceFullNameLessThan(String value) {
            addCriterion("source_full_name <", value, "sourceFullName");
            return (Criteria) this;
        }

        public Criteria andSourceFullNameLessThanOrEqualTo(String value) {
            addCriterion("source_full_name <=", value, "sourceFullName");
            return (Criteria) this;
        }

        public Criteria andSourceFullNameLike(String value) {
            addCriterion("source_full_name like", value, "sourceFullName");
            return (Criteria) this;
        }

        public Criteria andSourceFullNameNotLike(String value) {
            addCriterion("source_full_name not like", value, "sourceFullName");
            return (Criteria) this;
        }

        public Criteria andSourceFullNameIn(List<String> values) {
            addCriterion("source_full_name in", values, "sourceFullName");
            return (Criteria) this;
        }

        public Criteria andSourceFullNameNotIn(List<String> values) {
            addCriterion("source_full_name not in", values, "sourceFullName");
            return (Criteria) this;
        }

        public Criteria andSourceFullNameBetween(String value1, String value2) {
            addCriterion("source_full_name between", value1, value2, "sourceFullName");
            return (Criteria) this;
        }

        public Criteria andSourceFullNameNotBetween(String value1, String value2) {
            addCriterion("source_full_name not between", value1, value2, "sourceFullName");
            return (Criteria) this;
        }

        public Criteria andIdEqualToWhenPresent(Long value) {
            if(value != null) {
                addCriterion("id =", value, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdNotEqualToWhenPresent(Long value) {
            if(value != null) {
                addCriterion("id <>", value, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanWhenPresent(Long value) {
            if(value != null) {
                addCriterion("id >", value, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualToWhenPresent(Long value) {
            if(value != null) {
                addCriterion("id >=", value, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdLessThanWhenPresent(Long value) {
            if(value != null) {
                addCriterion("id <", value, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualToWhenPresent(Long value) {
            if(value != null) {
                addCriterion("id <=", value, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdInWhenPresent(List<Long> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("id in", values, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdNotInWhenPresent(List<Long> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("id not in", values, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdBetweenWhenPresent(Long value1, Long value2) {
            if(value1 != null && value2 != null){
                addCriterion("id between", value1, value2, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdNotBetweenWhenPresent(Long value1, Long value2) {
            if(value1 != null && value2 != null){
                addCriterion("id not between", value1, value2, "id");
            }
            return (Criteria) this;
        }

        public Criteria andGmtCreateEqualToWhenPresent(Date value) {
            if(value != null) {
                addCriterion("gmt_create =", value, "gmtCreate");
            }
            return (Criteria) this;
        }

        public Criteria andGmtCreateNotEqualToWhenPresent(Date value) {
            if(value != null) {
                addCriterion("gmt_create <>", value, "gmtCreate");
            }
            return (Criteria) this;
        }

        public Criteria andGmtCreateGreaterThanWhenPresent(Date value) {
            if(value != null) {
                addCriterion("gmt_create >", value, "gmtCreate");
            }
            return (Criteria) this;
        }

        public Criteria andGmtCreateGreaterThanOrEqualToWhenPresent(Date value) {
            if(value != null) {
                addCriterion("gmt_create >=", value, "gmtCreate");
            }
            return (Criteria) this;
        }

        public Criteria andGmtCreateLessThanWhenPresent(Date value) {
            if(value != null) {
                addCriterion("gmt_create <", value, "gmtCreate");
            }
            return (Criteria) this;
        }

        public Criteria andGmtCreateLessThanOrEqualToWhenPresent(Date value) {
            if(value != null) {
                addCriterion("gmt_create <=", value, "gmtCreate");
            }
            return (Criteria) this;
        }

        public Criteria andGmtCreateInWhenPresent(List<Date> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("gmt_create in", values, "gmtCreate");
            }
            return (Criteria) this;
        }

        public Criteria andGmtCreateNotInWhenPresent(List<Date> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("gmt_create not in", values, "gmtCreate");
            }
            return (Criteria) this;
        }

        public Criteria andGmtCreateBetweenWhenPresent(Date value1, Date value2) {
            if(value1 != null && value2 != null){
                addCriterion("gmt_create between", value1, value2, "gmtCreate");
            }
            return (Criteria) this;
        }

        public Criteria andGmtCreateNotBetweenWhenPresent(Date value1, Date value2) {
            if(value1 != null && value2 != null){
                addCriterion("gmt_create not between", value1, value2, "gmtCreate");
            }
            return (Criteria) this;
        }

        public Criteria andGmtModifiedEqualToWhenPresent(Date value) {
            if(value != null) {
                addCriterion("gmt_modified =", value, "gmtModified");
            }
            return (Criteria) this;
        }

        public Criteria andGmtModifiedNotEqualToWhenPresent(Date value) {
            if(value != null) {
                addCriterion("gmt_modified <>", value, "gmtModified");
            }
            return (Criteria) this;
        }

        public Criteria andGmtModifiedGreaterThanWhenPresent(Date value) {
            if(value != null) {
                addCriterion("gmt_modified >", value, "gmtModified");
            }
            return (Criteria) this;
        }

        public Criteria andGmtModifiedGreaterThanOrEqualToWhenPresent(Date value) {
            if(value != null) {
                addCriterion("gmt_modified >=", value, "gmtModified");
            }
            return (Criteria) this;
        }

        public Criteria andGmtModifiedLessThanWhenPresent(Date value) {
            if(value != null) {
                addCriterion("gmt_modified <", value, "gmtModified");
            }
            return (Criteria) this;
        }

        public Criteria andGmtModifiedLessThanOrEqualToWhenPresent(Date value) {
            if(value != null) {
                addCriterion("gmt_modified <=", value, "gmtModified");
            }
            return (Criteria) this;
        }

        public Criteria andGmtModifiedInWhenPresent(List<Date> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("gmt_modified in", values, "gmtModified");
            }
            return (Criteria) this;
        }

        public Criteria andGmtModifiedNotInWhenPresent(List<Date> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("gmt_modified not in", values, "gmtModified");
            }
            return (Criteria) this;
        }

        public Criteria andGmtModifiedBetweenWhenPresent(Date value1, Date value2) {
            if(value1 != null && value2 != null){
                addCriterion("gmt_modified between", value1, value2, "gmtModified");
            }
            return (Criteria) this;
        }

        public Criteria andGmtModifiedNotBetweenWhenPresent(Date value1, Date value2) {
            if(value1 != null && value2 != null){
                addCriterion("gmt_modified not between", value1, value2, "gmtModified");
            }
            return (Criteria) this;
        }

        public Criteria andCreatorEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("creator =", value, "creator");
            }
            return (Criteria) this;
        }

        public Criteria andCreatorNotEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("creator <>", value, "creator");
            }
            return (Criteria) this;
        }

        public Criteria andCreatorGreaterThanWhenPresent(String value) {
            if(value != null) {
                addCriterion("creator >", value, "creator");
            }
            return (Criteria) this;
        }

        public Criteria andCreatorGreaterThanOrEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("creator >=", value, "creator");
            }
            return (Criteria) this;
        }

        public Criteria andCreatorLessThanWhenPresent(String value) {
            if(value != null) {
                addCriterion("creator <", value, "creator");
            }
            return (Criteria) this;
        }

        public Criteria andCreatorLessThanOrEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("creator <=", value, "creator");
            }
            return (Criteria) this;
        }

        public Criteria andCreatorLikeWhenPresent(String value) {
            if(value != null) {
                addCriterion("creator like", value, "creator");
            }
            return (Criteria) this;
        }

        public Criteria andCreatorNotLikeWhenPresent(String value) {
            if(value != null) {
                addCriterion("creator not like", value, "creator");
            }
            return (Criteria) this;
        }

        public Criteria andCreatorInWhenPresent(List<String> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("creator in", values, "creator");
            }
            return (Criteria) this;
        }

        public Criteria andCreatorNotInWhenPresent(List<String> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("creator not in", values, "creator");
            }
            return (Criteria) this;
        }

        public Criteria andCreatorBetweenWhenPresent(String value1, String value2) {
            if(value1 != null && value2 != null){
                addCriterion("creator between", value1, value2, "creator");
            }
            return (Criteria) this;
        }

        public Criteria andCreatorNotBetweenWhenPresent(String value1, String value2) {
            if(value1 != null && value2 != null){
                addCriterion("creator not between", value1, value2, "creator");
            }
            return (Criteria) this;
        }

        public Criteria andModifierEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("modifier =", value, "modifier");
            }
            return (Criteria) this;
        }

        public Criteria andModifierNotEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("modifier <>", value, "modifier");
            }
            return (Criteria) this;
        }

        public Criteria andModifierGreaterThanWhenPresent(String value) {
            if(value != null) {
                addCriterion("modifier >", value, "modifier");
            }
            return (Criteria) this;
        }

        public Criteria andModifierGreaterThanOrEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("modifier >=", value, "modifier");
            }
            return (Criteria) this;
        }

        public Criteria andModifierLessThanWhenPresent(String value) {
            if(value != null) {
                addCriterion("modifier <", value, "modifier");
            }
            return (Criteria) this;
        }

        public Criteria andModifierLessThanOrEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("modifier <=", value, "modifier");
            }
            return (Criteria) this;
        }

        public Criteria andModifierLikeWhenPresent(String value) {
            if(value != null) {
                addCriterion("modifier like", value, "modifier");
            }
            return (Criteria) this;
        }

        public Criteria andModifierNotLikeWhenPresent(String value) {
            if(value != null) {
                addCriterion("modifier not like", value, "modifier");
            }
            return (Criteria) this;
        }

        public Criteria andModifierInWhenPresent(List<String> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("modifier in", values, "modifier");
            }
            return (Criteria) this;
        }

        public Criteria andModifierNotInWhenPresent(List<String> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("modifier not in", values, "modifier");
            }
            return (Criteria) this;
        }

        public Criteria andModifierBetweenWhenPresent(String value1, String value2) {
            if(value1 != null && value2 != null){
                addCriterion("modifier between", value1, value2, "modifier");
            }
            return (Criteria) this;
        }

        public Criteria andModifierNotBetweenWhenPresent(String value1, String value2) {
            if(value1 != null && value2 != null){
                addCriterion("modifier not between", value1, value2, "modifier");
            }
            return (Criteria) this;
        }

        public Criteria andDeletedIdEqualToWhenPresent(Long value) {
            if(value != null) {
                addCriterion("deleted_id =", value, "deletedId");
            }
            return (Criteria) this;
        }

        public Criteria andDeletedIdNotEqualToWhenPresent(Long value) {
            if(value != null) {
                addCriterion("deleted_id <>", value, "deletedId");
            }
            return (Criteria) this;
        }

        public Criteria andDeletedIdGreaterThanWhenPresent(Long value) {
            if(value != null) {
                addCriterion("deleted_id >", value, "deletedId");
            }
            return (Criteria) this;
        }

        public Criteria andDeletedIdGreaterThanOrEqualToWhenPresent(Long value) {
            if(value != null) {
                addCriterion("deleted_id >=", value, "deletedId");
            }
            return (Criteria) this;
        }

        public Criteria andDeletedIdLessThanWhenPresent(Long value) {
            if(value != null) {
                addCriterion("deleted_id <", value, "deletedId");
            }
            return (Criteria) this;
        }

        public Criteria andDeletedIdLessThanOrEqualToWhenPresent(Long value) {
            if(value != null) {
                addCriterion("deleted_id <=", value, "deletedId");
            }
            return (Criteria) this;
        }

        public Criteria andDeletedIdInWhenPresent(List<Long> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("deleted_id in", values, "deletedId");
            }
            return (Criteria) this;
        }

        public Criteria andDeletedIdNotInWhenPresent(List<Long> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("deleted_id not in", values, "deletedId");
            }
            return (Criteria) this;
        }

        public Criteria andDeletedIdBetweenWhenPresent(Long value1, Long value2) {
            if(value1 != null && value2 != null){
                addCriterion("deleted_id between", value1, value2, "deletedId");
            }
            return (Criteria) this;
        }

        public Criteria andDeletedIdNotBetweenWhenPresent(Long value1, Long value2) {
            if(value1 != null && value2 != null){
                addCriterion("deleted_id not between", value1, value2, "deletedId");
            }
            return (Criteria) this;
        }

        public Criteria andTenantIdEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("tenant_id =", value, "tenantId");
            }
            return (Criteria) this;
        }

        public Criteria andTenantIdNotEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("tenant_id <>", value, "tenantId");
            }
            return (Criteria) this;
        }

        public Criteria andTenantIdGreaterThanWhenPresent(String value) {
            if(value != null) {
                addCriterion("tenant_id >", value, "tenantId");
            }
            return (Criteria) this;
        }

        public Criteria andTenantIdGreaterThanOrEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("tenant_id >=", value, "tenantId");
            }
            return (Criteria) this;
        }

        public Criteria andTenantIdLessThanWhenPresent(String value) {
            if(value != null) {
                addCriterion("tenant_id <", value, "tenantId");
            }
            return (Criteria) this;
        }

        public Criteria andTenantIdLessThanOrEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("tenant_id <=", value, "tenantId");
            }
            return (Criteria) this;
        }

        public Criteria andTenantIdLikeWhenPresent(String value) {
            if(value != null) {
                addCriterion("tenant_id like", value, "tenantId");
            }
            return (Criteria) this;
        }

        public Criteria andTenantIdNotLikeWhenPresent(String value) {
            if(value != null) {
                addCriterion("tenant_id not like", value, "tenantId");
            }
            return (Criteria) this;
        }

        public Criteria andTenantIdInWhenPresent(List<String> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("tenant_id in", values, "tenantId");
            }
            return (Criteria) this;
        }

        public Criteria andTenantIdNotInWhenPresent(List<String> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("tenant_id not in", values, "tenantId");
            }
            return (Criteria) this;
        }

        public Criteria andTenantIdBetweenWhenPresent(String value1, String value2) {
            if(value1 != null && value2 != null){
                addCriterion("tenant_id between", value1, value2, "tenantId");
            }
            return (Criteria) this;
        }

        public Criteria andTenantIdNotBetweenWhenPresent(String value1, String value2) {
            if(value1 != null && value2 != null){
                addCriterion("tenant_id not between", value1, value2, "tenantId");
            }
            return (Criteria) this;
        }

        public Criteria andProjectIdEqualToWhenPresent(Long value) {
            if(value != null) {
                addCriterion("project_id =", value, "projectId");
            }
            return (Criteria) this;
        }

        public Criteria andProjectIdNotEqualToWhenPresent(Long value) {
            if(value != null) {
                addCriterion("project_id <>", value, "projectId");
            }
            return (Criteria) this;
        }

        public Criteria andProjectIdGreaterThanWhenPresent(Long value) {
            if(value != null) {
                addCriterion("project_id >", value, "projectId");
            }
            return (Criteria) this;
        }

        public Criteria andProjectIdGreaterThanOrEqualToWhenPresent(Long value) {
            if(value != null) {
                addCriterion("project_id >=", value, "projectId");
            }
            return (Criteria) this;
        }

        public Criteria andProjectIdLessThanWhenPresent(Long value) {
            if(value != null) {
                addCriterion("project_id <", value, "projectId");
            }
            return (Criteria) this;
        }

        public Criteria andProjectIdLessThanOrEqualToWhenPresent(Long value) {
            if(value != null) {
                addCriterion("project_id <=", value, "projectId");
            }
            return (Criteria) this;
        }

        public Criteria andProjectIdInWhenPresent(List<Long> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("project_id in", values, "projectId");
            }
            return (Criteria) this;
        }

        public Criteria andProjectIdNotInWhenPresent(List<Long> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("project_id not in", values, "projectId");
            }
            return (Criteria) this;
        }

        public Criteria andProjectIdBetweenWhenPresent(Long value1, Long value2) {
            if(value1 != null && value2 != null){
                addCriterion("project_id between", value1, value2, "projectId");
            }
            return (Criteria) this;
        }

        public Criteria andProjectIdNotBetweenWhenPresent(Long value1, Long value2) {
            if(value1 != null && value2 != null){
                addCriterion("project_id not between", value1, value2, "projectId");
            }
            return (Criteria) this;
        }

        public Criteria andSourceTypeEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("source_type =", value, "sourceType");
            }
            return (Criteria) this;
        }

        public Criteria andSourceTypeNotEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("source_type <>", value, "sourceType");
            }
            return (Criteria) this;
        }

        public Criteria andSourceTypeGreaterThanWhenPresent(String value) {
            if(value != null) {
                addCriterion("source_type >", value, "sourceType");
            }
            return (Criteria) this;
        }

        public Criteria andSourceTypeGreaterThanOrEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("source_type >=", value, "sourceType");
            }
            return (Criteria) this;
        }

        public Criteria andSourceTypeLessThanWhenPresent(String value) {
            if(value != null) {
                addCriterion("source_type <", value, "sourceType");
            }
            return (Criteria) this;
        }

        public Criteria andSourceTypeLessThanOrEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("source_type <=", value, "sourceType");
            }
            return (Criteria) this;
        }

        public Criteria andSourceTypeLikeWhenPresent(String value) {
            if(value != null) {
                addCriterion("source_type like", value, "sourceType");
            }
            return (Criteria) this;
        }

        public Criteria andSourceTypeNotLikeWhenPresent(String value) {
            if(value != null) {
                addCriterion("source_type not like", value, "sourceType");
            }
            return (Criteria) this;
        }

        public Criteria andSourceTypeInWhenPresent(List<String> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("source_type in", values, "sourceType");
            }
            return (Criteria) this;
        }

        public Criteria andSourceTypeNotInWhenPresent(List<String> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("source_type not in", values, "sourceType");
            }
            return (Criteria) this;
        }

        public Criteria andSourceTypeBetweenWhenPresent(String value1, String value2) {
            if(value1 != null && value2 != null){
                addCriterion("source_type between", value1, value2, "sourceType");
            }
            return (Criteria) this;
        }

        public Criteria andSourceTypeNotBetweenWhenPresent(String value1, String value2) {
            if(value1 != null && value2 != null){
                addCriterion("source_type not between", value1, value2, "sourceType");
            }
            return (Criteria) this;
        }

        public Criteria andSourceUrlEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("source_url =", value, "sourceUrl");
            }
            return (Criteria) this;
        }

        public Criteria andSourceUrlNotEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("source_url <>", value, "sourceUrl");
            }
            return (Criteria) this;
        }

        public Criteria andSourceUrlGreaterThanWhenPresent(String value) {
            if(value != null) {
                addCriterion("source_url >", value, "sourceUrl");
            }
            return (Criteria) this;
        }

        public Criteria andSourceUrlGreaterThanOrEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("source_url >=", value, "sourceUrl");
            }
            return (Criteria) this;
        }

        public Criteria andSourceUrlLessThanWhenPresent(String value) {
            if(value != null) {
                addCriterion("source_url <", value, "sourceUrl");
            }
            return (Criteria) this;
        }

        public Criteria andSourceUrlLessThanOrEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("source_url <=", value, "sourceUrl");
            }
            return (Criteria) this;
        }

        public Criteria andSourceUrlLikeWhenPresent(String value) {
            if(value != null) {
                addCriterion("source_url like", value, "sourceUrl");
            }
            return (Criteria) this;
        }

        public Criteria andSourceUrlNotLikeWhenPresent(String value) {
            if(value != null) {
                addCriterion("source_url not like", value, "sourceUrl");
            }
            return (Criteria) this;
        }

        public Criteria andSourceUrlInWhenPresent(List<String> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("source_url in", values, "sourceUrl");
            }
            return (Criteria) this;
        }

        public Criteria andSourceUrlNotInWhenPresent(List<String> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("source_url not in", values, "sourceUrl");
            }
            return (Criteria) this;
        }

        public Criteria andSourceUrlBetweenWhenPresent(String value1, String value2) {
            if(value1 != null && value2 != null){
                addCriterion("source_url between", value1, value2, "sourceUrl");
            }
            return (Criteria) this;
        }

        public Criteria andSourceUrlNotBetweenWhenPresent(String value1, String value2) {
            if(value1 != null && value2 != null){
                addCriterion("source_url not between", value1, value2, "sourceUrl");
            }
            return (Criteria) this;
        }

        public Criteria andSourceBranchEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("source_branch =", value, "sourceBranch");
            }
            return (Criteria) this;
        }

        public Criteria andSourceBranchNotEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("source_branch <>", value, "sourceBranch");
            }
            return (Criteria) this;
        }

        public Criteria andSourceBranchGreaterThanWhenPresent(String value) {
            if(value != null) {
                addCriterion("source_branch >", value, "sourceBranch");
            }
            return (Criteria) this;
        }

        public Criteria andSourceBranchGreaterThanOrEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("source_branch >=", value, "sourceBranch");
            }
            return (Criteria) this;
        }

        public Criteria andSourceBranchLessThanWhenPresent(String value) {
            if(value != null) {
                addCriterion("source_branch <", value, "sourceBranch");
            }
            return (Criteria) this;
        }

        public Criteria andSourceBranchLessThanOrEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("source_branch <=", value, "sourceBranch");
            }
            return (Criteria) this;
        }

        public Criteria andSourceBranchLikeWhenPresent(String value) {
            if(value != null) {
                addCriterion("source_branch like", value, "sourceBranch");
            }
            return (Criteria) this;
        }

        public Criteria andSourceBranchNotLikeWhenPresent(String value) {
            if(value != null) {
                addCriterion("source_branch not like", value, "sourceBranch");
            }
            return (Criteria) this;
        }

        public Criteria andSourceBranchInWhenPresent(List<String> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("source_branch in", values, "sourceBranch");
            }
            return (Criteria) this;
        }

        public Criteria andSourceBranchNotInWhenPresent(List<String> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("source_branch not in", values, "sourceBranch");
            }
            return (Criteria) this;
        }

        public Criteria andSourceBranchBetweenWhenPresent(String value1, String value2) {
            if(value1 != null && value2 != null){
                addCriterion("source_branch between", value1, value2, "sourceBranch");
            }
            return (Criteria) this;
        }

        public Criteria andSourceBranchNotBetweenWhenPresent(String value1, String value2) {
            if(value1 != null && value2 != null){
                addCriterion("source_branch not between", value1, value2, "sourceBranch");
            }
            return (Criteria) this;
        }

        public Criteria andSourcePathEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("source_path =", value, "sourcePath");
            }
            return (Criteria) this;
        }

        public Criteria andSourcePathNotEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("source_path <>", value, "sourcePath");
            }
            return (Criteria) this;
        }

        public Criteria andSourcePathGreaterThanWhenPresent(String value) {
            if(value != null) {
                addCriterion("source_path >", value, "sourcePath");
            }
            return (Criteria) this;
        }

        public Criteria andSourcePathGreaterThanOrEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("source_path >=", value, "sourcePath");
            }
            return (Criteria) this;
        }

        public Criteria andSourcePathLessThanWhenPresent(String value) {
            if(value != null) {
                addCriterion("source_path <", value, "sourcePath");
            }
            return (Criteria) this;
        }

        public Criteria andSourcePathLessThanOrEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("source_path <=", value, "sourcePath");
            }
            return (Criteria) this;
        }

        public Criteria andSourcePathLikeWhenPresent(String value) {
            if(value != null) {
                addCriterion("source_path like", value, "sourcePath");
            }
            return (Criteria) this;
        }

        public Criteria andSourcePathNotLikeWhenPresent(String value) {
            if(value != null) {
                addCriterion("source_path not like", value, "sourcePath");
            }
            return (Criteria) this;
        }

        public Criteria andSourcePathInWhenPresent(List<String> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("source_path in", values, "sourcePath");
            }
            return (Criteria) this;
        }

        public Criteria andSourcePathNotInWhenPresent(List<String> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("source_path not in", values, "sourcePath");
            }
            return (Criteria) this;
        }

        public Criteria andSourcePathBetweenWhenPresent(String value1, String value2) {
            if(value1 != null && value2 != null){
                addCriterion("source_path between", value1, value2, "sourcePath");
            }
            return (Criteria) this;
        }

        public Criteria andSourcePathNotBetweenWhenPresent(String value1, String value2) {
            if(value1 != null && value2 != null){
                addCriterion("source_path not between", value1, value2, "sourcePath");
            }
            return (Criteria) this;
        }

        public Criteria andGmtRefreshEqualToWhenPresent(Date value) {
            if(value != null) {
                addCriterion("gmt_refresh =", value, "gmtRefresh");
            }
            return (Criteria) this;
        }

        public Criteria andGmtRefreshNotEqualToWhenPresent(Date value) {
            if(value != null) {
                addCriterion("gmt_refresh <>", value, "gmtRefresh");
            }
            return (Criteria) this;
        }

        public Criteria andGmtRefreshGreaterThanWhenPresent(Date value) {
            if(value != null) {
                addCriterion("gmt_refresh >", value, "gmtRefresh");
            }
            return (Criteria) this;
        }

        public Criteria andGmtRefreshGreaterThanOrEqualToWhenPresent(Date value) {
            if(value != null) {
                addCriterion("gmt_refresh >=", value, "gmtRefresh");
            }
            return (Criteria) this;
        }

        public Criteria andGmtRefreshLessThanWhenPresent(Date value) {
            if(value != null) {
                addCriterion("gmt_refresh <", value, "gmtRefresh");
            }
            return (Criteria) this;
        }

        public Criteria andGmtRefreshLessThanOrEqualToWhenPresent(Date value) {
            if(value != null) {
                addCriterion("gmt_refresh <=", value, "gmtRefresh");
            }
            return (Criteria) this;
        }

        public Criteria andGmtRefreshInWhenPresent(List<Date> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("gmt_refresh in", values, "gmtRefresh");
            }
            return (Criteria) this;
        }

        public Criteria andGmtRefreshNotInWhenPresent(List<Date> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("gmt_refresh not in", values, "gmtRefresh");
            }
            return (Criteria) this;
        }

        public Criteria andGmtRefreshBetweenWhenPresent(Date value1, Date value2) {
            if(value1 != null && value2 != null){
                addCriterion("gmt_refresh between", value1, value2, "gmtRefresh");
            }
            return (Criteria) this;
        }

        public Criteria andGmtRefreshNotBetweenWhenPresent(Date value1, Date value2) {
            if(value1 != null && value2 != null){
                addCriterion("gmt_refresh not between", value1, value2, "gmtRefresh");
            }
            return (Criteria) this;
        }

        public Criteria andSourceGitTypeEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("source_git_type =", value, "sourceGitType");
            }
            return (Criteria) this;
        }

        public Criteria andSourceGitTypeNotEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("source_git_type <>", value, "sourceGitType");
            }
            return (Criteria) this;
        }

        public Criteria andSourceGitTypeGreaterThanWhenPresent(String value) {
            if(value != null) {
                addCriterion("source_git_type >", value, "sourceGitType");
            }
            return (Criteria) this;
        }

        public Criteria andSourceGitTypeGreaterThanOrEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("source_git_type >=", value, "sourceGitType");
            }
            return (Criteria) this;
        }

        public Criteria andSourceGitTypeLessThanWhenPresent(String value) {
            if(value != null) {
                addCriterion("source_git_type <", value, "sourceGitType");
            }
            return (Criteria) this;
        }

        public Criteria andSourceGitTypeLessThanOrEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("source_git_type <=", value, "sourceGitType");
            }
            return (Criteria) this;
        }

        public Criteria andSourceGitTypeLikeWhenPresent(String value) {
            if(value != null) {
                addCriterion("source_git_type like", value, "sourceGitType");
            }
            return (Criteria) this;
        }

        public Criteria andSourceGitTypeNotLikeWhenPresent(String value) {
            if(value != null) {
                addCriterion("source_git_type not like", value, "sourceGitType");
            }
            return (Criteria) this;
        }

        public Criteria andSourceGitTypeInWhenPresent(List<String> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("source_git_type in", values, "sourceGitType");
            }
            return (Criteria) this;
        }

        public Criteria andSourceGitTypeNotInWhenPresent(List<String> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("source_git_type not in", values, "sourceGitType");
            }
            return (Criteria) this;
        }

        public Criteria andSourceGitTypeBetweenWhenPresent(String value1, String value2) {
            if(value1 != null && value2 != null){
                addCriterion("source_git_type between", value1, value2, "sourceGitType");
            }
            return (Criteria) this;
        }

        public Criteria andSourceGitTypeNotBetweenWhenPresent(String value1, String value2) {
            if(value1 != null && value2 != null){
                addCriterion("source_git_type not between", value1, value2, "sourceGitType");
            }
            return (Criteria) this;
        }

        public Criteria andGmtRefreshSuccessEqualToWhenPresent(Date value) {
            if(value != null) {
                addCriterion("gmt_refresh_success =", value, "gmtRefreshSuccess");
            }
            return (Criteria) this;
        }

        public Criteria andGmtRefreshSuccessNotEqualToWhenPresent(Date value) {
            if(value != null) {
                addCriterion("gmt_refresh_success <>", value, "gmtRefreshSuccess");
            }
            return (Criteria) this;
        }

        public Criteria andGmtRefreshSuccessGreaterThanWhenPresent(Date value) {
            if(value != null) {
                addCriterion("gmt_refresh_success >", value, "gmtRefreshSuccess");
            }
            return (Criteria) this;
        }

        public Criteria andGmtRefreshSuccessGreaterThanOrEqualToWhenPresent(Date value) {
            if(value != null) {
                addCriterion("gmt_refresh_success >=", value, "gmtRefreshSuccess");
            }
            return (Criteria) this;
        }

        public Criteria andGmtRefreshSuccessLessThanWhenPresent(Date value) {
            if(value != null) {
                addCriterion("gmt_refresh_success <", value, "gmtRefreshSuccess");
            }
            return (Criteria) this;
        }

        public Criteria andGmtRefreshSuccessLessThanOrEqualToWhenPresent(Date value) {
            if(value != null) {
                addCriterion("gmt_refresh_success <=", value, "gmtRefreshSuccess");
            }
            return (Criteria) this;
        }

        public Criteria andGmtRefreshSuccessInWhenPresent(List<Date> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("gmt_refresh_success in", values, "gmtRefreshSuccess");
            }
            return (Criteria) this;
        }

        public Criteria andGmtRefreshSuccessNotInWhenPresent(List<Date> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("gmt_refresh_success not in", values, "gmtRefreshSuccess");
            }
            return (Criteria) this;
        }

        public Criteria andGmtRefreshSuccessBetweenWhenPresent(Date value1, Date value2) {
            if(value1 != null && value2 != null){
                addCriterion("gmt_refresh_success between", value1, value2, "gmtRefreshSuccess");
            }
            return (Criteria) this;
        }

        public Criteria andGmtRefreshSuccessNotBetweenWhenPresent(Date value1, Date value2) {
            if(value1 != null && value2 != null){
                addCriterion("gmt_refresh_success not between", value1, value2, "gmtRefreshSuccess");
            }
            return (Criteria) this;
        }

        public Criteria andSourceFullNameEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("source_full_name =", value, "sourceFullName");
            }
            return (Criteria) this;
        }

        public Criteria andSourceFullNameNotEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("source_full_name <>", value, "sourceFullName");
            }
            return (Criteria) this;
        }

        public Criteria andSourceFullNameGreaterThanWhenPresent(String value) {
            if(value != null) {
                addCriterion("source_full_name >", value, "sourceFullName");
            }
            return (Criteria) this;
        }

        public Criteria andSourceFullNameGreaterThanOrEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("source_full_name >=", value, "sourceFullName");
            }
            return (Criteria) this;
        }

        public Criteria andSourceFullNameLessThanWhenPresent(String value) {
            if(value != null) {
                addCriterion("source_full_name <", value, "sourceFullName");
            }
            return (Criteria) this;
        }

        public Criteria andSourceFullNameLessThanOrEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("source_full_name <=", value, "sourceFullName");
            }
            return (Criteria) this;
        }

        public Criteria andSourceFullNameLikeWhenPresent(String value) {
            if(value != null) {
                addCriterion("source_full_name like", value, "sourceFullName");
            }
            return (Criteria) this;
        }

        public Criteria andSourceFullNameNotLikeWhenPresent(String value) {
            if(value != null) {
                addCriterion("source_full_name not like", value, "sourceFullName");
            }
            return (Criteria) this;
        }

        public Criteria andSourceFullNameInWhenPresent(List<String> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("source_full_name in", values, "sourceFullName");
            }
            return (Criteria) this;
        }

        public Criteria andSourceFullNameNotInWhenPresent(List<String> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("source_full_name not in", values, "sourceFullName");
            }
            return (Criteria) this;
        }

        public Criteria andSourceFullNameBetweenWhenPresent(String value1, String value2) {
            if(value1 != null && value2 != null){
                addCriterion("source_full_name between", value1, value2, "sourceFullName");
            }
            return (Criteria) this;
        }

        public Criteria andSourceFullNameNotBetweenWhenPresent(String value1, String value2) {
            if(value1 != null && value2 != null){
                addCriterion("source_full_name not between", value1, value2, "sourceFullName");
            }
            return (Criteria) this;
        }
    }

    /**
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends AbstractGeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    /**
     *
     * @mbg.generated
     */
    public enum OrderCondition {
        /**
         *主键
         */
        ID("id"),
        /**
         *创建时间
         */
        GMTCREATE("gmt_create"),
        /**
         *修改时间
         */
        GMTMODIFIED("gmt_modified"),
        /**
         *创建人
         */
        CREATOR("creator"),
        /**
         *修改人
         */
        MODIFIER("modifier"),
        /**
         *逻辑删除标志 删除的时候 将当前字段设置成id，0 - 有效  其他有效
         */
        DELETEDID("deleted_id"),
        /**
         *租户id
         */
        TENANTID("tenant_id"),
        /**
         *项目id
         */
        PROJECTID("project_id"),
        /**
         *文档源类型
         */
        SOURCETYPE("source_type"),
        /**
         *文档源地址
         */
        SOURCEURL("source_url"),
        /**
         *文档源分支
         */
        SOURCEBRANCH("source_branch"),
        /**
         *相对文档地址
         */
        SOURCEPATH("source_path"),
        /**
         *文档刷新时间
         */
        GMTREFRESH("gmt_refresh"),
        /**
         *git的类型
         */
        SOURCEGITTYPE("source_git_type"),
        /**
         *刷新成功时间
         */
        GMTREFRESHSUCCESS("gmt_refresh_success"),
        /**
         *文档源全称
         */
        SOURCEFULLNAME("source_full_name");

        private String columnName;

        OrderCondition(String columnName) {
            this.columnName = columnName;
        }

        public String getColumnName() {
            return columnName;
        }

        public static OrderCondition getEnumByName(String name) {
            OrderCondition[] orderConditions = OrderCondition.values();
            for (OrderCondition orderCondition : orderConditions) {
                if (orderCondition.name().equalsIgnoreCase(name)) {
                    return orderCondition;
                }
            }
            throw new RuntimeException("OrderCondition of " + name + " enum not exist");
        }

        @Override
        public String toString() {
            return columnName;
        }
    }

    /**
     *
     * @mbg.generated
     */
    public enum SortType {
        /**
         * 升序
         */
        ASC("asc"),
        /**
         * 降序
         */
        DESC("desc");

        private String value;

        SortType(String value) {
            this.value = value;
        }

        public String getValue() {
            return value;
        }

        public static SortType getEnumByName(String name) {
            SortType[] sortTypes = SortType.values();
            for (SortType sortType : sortTypes) {
                if (sortType.name().equalsIgnoreCase(name)) {
                    return sortType;
                }
            }
            throw new RuntimeException("SortType of " + name + " enum not exist");
        }

        @Override
        public String toString() {
            return value;
        }
    }
}