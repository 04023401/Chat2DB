package com.alibaba.ctoo.opensource.domain.repository.dataobject;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

/**
 * This class was generated by Ali-Generator
 * @author zhuangjiaju
 */
public class RequestLogParam {
    /**
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     *
     * @mbg.generated
     */
    @Deprecated
    protected boolean distinct;

    /**
     *
     * @mbg.generated
     */
    protected boolean page;

    /**
     *
     * @mbg.generated
     */
    protected int pageIndex;

    /**
     *
     * @mbg.generated
     */
    protected int pageSize;

    /**
     *
     * @mbg.generated
     */
    protected int pageStart;

    /**
     *
     * @mbg.generated
     */
    protected String distinctSql;

    /**
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     *
     * @mbg.generated
     */
    public RequestLogParam() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * @param orderCondition
     * @param sortType
     * @return
     *
     * @mbg.generated
     */
    public RequestLogParam appendOrderByClause(OrderCondition orderCondition, SortType sortType) {
        if (null != orderByClause) {
            orderByClause = orderByClause + ", " + orderCondition.getColumnName() + " " + sortType.getValue();
        } else {
            orderByClause = orderCondition.getColumnName() + " " + sortType.getValue();
        }
        return this;
    }

    /**
     * @return
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * @param distinct
     *
     * @mbg.generated
     */
    @Deprecated
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * @return
     *
     * @mbg.generated
     */
    @Deprecated
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * @param page
     * @return
     *
     * @mbg.generated
     */
    public RequestLogParam setPage(boolean page) {
        this.page = page;
        return this;
    }

    /**
     * @return
     *
     * @mbg.generated
     */
    public boolean isPage() {
        return page;
    }

    /**
     * @return
     *
     * @mbg.generated
     */
    public int getPageIndex() {
        return pageIndex;
    }

    /**
     * @param pageSize
     * @return
     *
     * @mbg.generated
     */
    public RequestLogParam setPageSize(int pageSize) {
        this.pageSize = pageSize < 1 ? 10 : pageSize;
        this.pageIndex = pageStart < 1 ? 0 : (pageStart - 1) * this.pageSize;
        return this;
    }

    /**
     * @return
     *
     * @mbg.generated
     */
    public int getPageSize() {
        return pageSize;
    }

    /**
     * @param pageStart
     * @return
     *
     * @mbg.generated
     */
    public RequestLogParam setPageStart(int pageStart) {
        this.pageStart = pageStart < 1 ? 1 : pageStart;
        this.pageIndex = (this.pageStart - 1) * this.pageSize;
        return this;
    }

    /**
     * @return
     *
     * @mbg.generated
     */
    public int getPageStart() {
        return pageStart;
    }

    /**
     * @param pageStart
     * @param pageSize
     *
     * @mbg.generated
     */
    public void setPagination(int pageStart, int pageSize) {
        this.page = true;
        this.pageSize = pageSize < 1 ? 10 : pageSize;
        this.pageIndex = pageStart < 1 ? 0 : (pageStart - 1) * this.pageSize;
    }

    /**
     * @param condition
     * @return
     *
     * @mbg.generated
     */
    public RequestLogParam appendDistinct(OrderCondition condition) {
        if (null != distinctSql){
            distinctSql = distinctSql + ", " + condition.getColumnName();
        } else {
            distinctSql = condition.getColumnName();
        }
        return this;
    }

    /**
     * @return
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * @param criteria
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * @return
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * @return
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * @return
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     *
     * @mbg.generated
     */
    protected abstract static class AbstractGeneratedCriteria {
        protected List<Criterion> criteria;

        protected AbstractGeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andGmtCreateIsNull() {
            addCriterion("gmt_create is null");
            return (Criteria) this;
        }

        public Criteria andGmtCreateIsNotNull() {
            addCriterion("gmt_create is not null");
            return (Criteria) this;
        }

        public Criteria andGmtCreateEqualTo(Date value) {
            addCriterion("gmt_create =", value, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateNotEqualTo(Date value) {
            addCriterion("gmt_create <>", value, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateGreaterThan(Date value) {
            addCriterion("gmt_create >", value, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateGreaterThanOrEqualTo(Date value) {
            addCriterion("gmt_create >=", value, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateLessThan(Date value) {
            addCriterion("gmt_create <", value, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateLessThanOrEqualTo(Date value) {
            addCriterion("gmt_create <=", value, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateIn(List<Date> values) {
            addCriterion("gmt_create in", values, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateNotIn(List<Date> values) {
            addCriterion("gmt_create not in", values, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateBetween(Date value1, Date value2) {
            addCriterion("gmt_create between", value1, value2, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateNotBetween(Date value1, Date value2) {
            addCriterion("gmt_create not between", value1, value2, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedIsNull() {
            addCriterion("gmt_modified is null");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedIsNotNull() {
            addCriterion("gmt_modified is not null");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedEqualTo(Date value) {
            addCriterion("gmt_modified =", value, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedNotEqualTo(Date value) {
            addCriterion("gmt_modified <>", value, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedGreaterThan(Date value) {
            addCriterion("gmt_modified >", value, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedGreaterThanOrEqualTo(Date value) {
            addCriterion("gmt_modified >=", value, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedLessThan(Date value) {
            addCriterion("gmt_modified <", value, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedLessThanOrEqualTo(Date value) {
            addCriterion("gmt_modified <=", value, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedIn(List<Date> values) {
            addCriterion("gmt_modified in", values, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedNotIn(List<Date> values) {
            addCriterion("gmt_modified not in", values, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedBetween(Date value1, Date value2) {
            addCriterion("gmt_modified between", value1, value2, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedNotBetween(Date value1, Date value2) {
            addCriterion("gmt_modified not between", value1, value2, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andTenantIdIsNull() {
            addCriterion("tenant_id is null");
            return (Criteria) this;
        }

        public Criteria andTenantIdIsNotNull() {
            addCriterion("tenant_id is not null");
            return (Criteria) this;
        }

        public Criteria andTenantIdEqualTo(String value) {
            addCriterion("tenant_id =", value, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdNotEqualTo(String value) {
            addCriterion("tenant_id <>", value, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdGreaterThan(String value) {
            addCriterion("tenant_id >", value, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdGreaterThanOrEqualTo(String value) {
            addCriterion("tenant_id >=", value, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdLessThan(String value) {
            addCriterion("tenant_id <", value, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdLessThanOrEqualTo(String value) {
            addCriterion("tenant_id <=", value, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdLike(String value) {
            addCriterion("tenant_id like", value, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdNotLike(String value) {
            addCriterion("tenant_id not like", value, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdIn(List<String> values) {
            addCriterion("tenant_id in", values, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdNotIn(List<String> values) {
            addCriterion("tenant_id not in", values, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdBetween(String value1, String value2) {
            addCriterion("tenant_id between", value1, value2, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdNotBetween(String value1, String value2) {
            addCriterion("tenant_id not between", value1, value2, "tenantId");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNull() {
            addCriterion("user_id is null");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNotNull() {
            addCriterion("user_id is not null");
            return (Criteria) this;
        }

        public Criteria andUserIdEqualTo(String value) {
            addCriterion("user_id =", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotEqualTo(String value) {
            addCriterion("user_id <>", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThan(String value) {
            addCriterion("user_id >", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThanOrEqualTo(String value) {
            addCriterion("user_id >=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThan(String value) {
            addCriterion("user_id <", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThanOrEqualTo(String value) {
            addCriterion("user_id <=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLike(String value) {
            addCriterion("user_id like", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotLike(String value) {
            addCriterion("user_id not like", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdIn(List<String> values) {
            addCriterion("user_id in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotIn(List<String> values) {
            addCriterion("user_id not in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdBetween(String value1, String value2) {
            addCriterion("user_id between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotBetween(String value1, String value2) {
            addCriterion("user_id not between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andTraceIdIsNull() {
            addCriterion("trace_id is null");
            return (Criteria) this;
        }

        public Criteria andTraceIdIsNotNull() {
            addCriterion("trace_id is not null");
            return (Criteria) this;
        }

        public Criteria andTraceIdEqualTo(String value) {
            addCriterion("trace_id =", value, "traceId");
            return (Criteria) this;
        }

        public Criteria andTraceIdNotEqualTo(String value) {
            addCriterion("trace_id <>", value, "traceId");
            return (Criteria) this;
        }

        public Criteria andTraceIdGreaterThan(String value) {
            addCriterion("trace_id >", value, "traceId");
            return (Criteria) this;
        }

        public Criteria andTraceIdGreaterThanOrEqualTo(String value) {
            addCriterion("trace_id >=", value, "traceId");
            return (Criteria) this;
        }

        public Criteria andTraceIdLessThan(String value) {
            addCriterion("trace_id <", value, "traceId");
            return (Criteria) this;
        }

        public Criteria andTraceIdLessThanOrEqualTo(String value) {
            addCriterion("trace_id <=", value, "traceId");
            return (Criteria) this;
        }

        public Criteria andTraceIdLike(String value) {
            addCriterion("trace_id like", value, "traceId");
            return (Criteria) this;
        }

        public Criteria andTraceIdNotLike(String value) {
            addCriterion("trace_id not like", value, "traceId");
            return (Criteria) this;
        }

        public Criteria andTraceIdIn(List<String> values) {
            addCriterion("trace_id in", values, "traceId");
            return (Criteria) this;
        }

        public Criteria andTraceIdNotIn(List<String> values) {
            addCriterion("trace_id not in", values, "traceId");
            return (Criteria) this;
        }

        public Criteria andTraceIdBetween(String value1, String value2) {
            addCriterion("trace_id between", value1, value2, "traceId");
            return (Criteria) this;
        }

        public Criteria andTraceIdNotBetween(String value1, String value2) {
            addCriterion("trace_id not between", value1, value2, "traceId");
            return (Criteria) this;
        }

        public Criteria andMethodIsNull() {
            addCriterion("method is null");
            return (Criteria) this;
        }

        public Criteria andMethodIsNotNull() {
            addCriterion("method is not null");
            return (Criteria) this;
        }

        public Criteria andMethodEqualTo(String value) {
            addCriterion("method =", value, "method");
            return (Criteria) this;
        }

        public Criteria andMethodNotEqualTo(String value) {
            addCriterion("method <>", value, "method");
            return (Criteria) this;
        }

        public Criteria andMethodGreaterThan(String value) {
            addCriterion("method >", value, "method");
            return (Criteria) this;
        }

        public Criteria andMethodGreaterThanOrEqualTo(String value) {
            addCriterion("method >=", value, "method");
            return (Criteria) this;
        }

        public Criteria andMethodLessThan(String value) {
            addCriterion("method <", value, "method");
            return (Criteria) this;
        }

        public Criteria andMethodLessThanOrEqualTo(String value) {
            addCriterion("method <=", value, "method");
            return (Criteria) this;
        }

        public Criteria andMethodLike(String value) {
            addCriterion("method like", value, "method");
            return (Criteria) this;
        }

        public Criteria andMethodNotLike(String value) {
            addCriterion("method not like", value, "method");
            return (Criteria) this;
        }

        public Criteria andMethodIn(List<String> values) {
            addCriterion("method in", values, "method");
            return (Criteria) this;
        }

        public Criteria andMethodNotIn(List<String> values) {
            addCriterion("method not in", values, "method");
            return (Criteria) this;
        }

        public Criteria andMethodBetween(String value1, String value2) {
            addCriterion("method between", value1, value2, "method");
            return (Criteria) this;
        }

        public Criteria andMethodNotBetween(String value1, String value2) {
            addCriterion("method not between", value1, value2, "method");
            return (Criteria) this;
        }

        public Criteria andModuleIsNull() {
            addCriterion("module is null");
            return (Criteria) this;
        }

        public Criteria andModuleIsNotNull() {
            addCriterion("module is not null");
            return (Criteria) this;
        }

        public Criteria andModuleEqualTo(String value) {
            addCriterion("module =", value, "module");
            return (Criteria) this;
        }

        public Criteria andModuleNotEqualTo(String value) {
            addCriterion("module <>", value, "module");
            return (Criteria) this;
        }

        public Criteria andModuleGreaterThan(String value) {
            addCriterion("module >", value, "module");
            return (Criteria) this;
        }

        public Criteria andModuleGreaterThanOrEqualTo(String value) {
            addCriterion("module >=", value, "module");
            return (Criteria) this;
        }

        public Criteria andModuleLessThan(String value) {
            addCriterion("module <", value, "module");
            return (Criteria) this;
        }

        public Criteria andModuleLessThanOrEqualTo(String value) {
            addCriterion("module <=", value, "module");
            return (Criteria) this;
        }

        public Criteria andModuleLike(String value) {
            addCriterion("module like", value, "module");
            return (Criteria) this;
        }

        public Criteria andModuleNotLike(String value) {
            addCriterion("module not like", value, "module");
            return (Criteria) this;
        }

        public Criteria andModuleIn(List<String> values) {
            addCriterion("module in", values, "module");
            return (Criteria) this;
        }

        public Criteria andModuleNotIn(List<String> values) {
            addCriterion("module not in", values, "module");
            return (Criteria) this;
        }

        public Criteria andModuleBetween(String value1, String value2) {
            addCriterion("module between", value1, value2, "module");
            return (Criteria) this;
        }

        public Criteria andModuleNotBetween(String value1, String value2) {
            addCriterion("module not between", value1, value2, "module");
            return (Criteria) this;
        }

        public Criteria andPathIsNull() {
            addCriterion("path is null");
            return (Criteria) this;
        }

        public Criteria andPathIsNotNull() {
            addCriterion("path is not null");
            return (Criteria) this;
        }

        public Criteria andPathEqualTo(String value) {
            addCriterion("path =", value, "path");
            return (Criteria) this;
        }

        public Criteria andPathNotEqualTo(String value) {
            addCriterion("path <>", value, "path");
            return (Criteria) this;
        }

        public Criteria andPathGreaterThan(String value) {
            addCriterion("path >", value, "path");
            return (Criteria) this;
        }

        public Criteria andPathGreaterThanOrEqualTo(String value) {
            addCriterion("path >=", value, "path");
            return (Criteria) this;
        }

        public Criteria andPathLessThan(String value) {
            addCriterion("path <", value, "path");
            return (Criteria) this;
        }

        public Criteria andPathLessThanOrEqualTo(String value) {
            addCriterion("path <=", value, "path");
            return (Criteria) this;
        }

        public Criteria andPathLike(String value) {
            addCriterion("path like", value, "path");
            return (Criteria) this;
        }

        public Criteria andPathNotLike(String value) {
            addCriterion("path not like", value, "path");
            return (Criteria) this;
        }

        public Criteria andPathIn(List<String> values) {
            addCriterion("path in", values, "path");
            return (Criteria) this;
        }

        public Criteria andPathNotIn(List<String> values) {
            addCriterion("path not in", values, "path");
            return (Criteria) this;
        }

        public Criteria andPathBetween(String value1, String value2) {
            addCriterion("path between", value1, value2, "path");
            return (Criteria) this;
        }

        public Criteria andPathNotBetween(String value1, String value2) {
            addCriterion("path not between", value1, value2, "path");
            return (Criteria) this;
        }

        public Criteria andQueryIsNull() {
            addCriterion("query is null");
            return (Criteria) this;
        }

        public Criteria andQueryIsNotNull() {
            addCriterion("query is not null");
            return (Criteria) this;
        }

        public Criteria andQueryEqualTo(String value) {
            addCriterion("query =", value, "query");
            return (Criteria) this;
        }

        public Criteria andQueryNotEqualTo(String value) {
            addCriterion("query <>", value, "query");
            return (Criteria) this;
        }

        public Criteria andQueryGreaterThan(String value) {
            addCriterion("query >", value, "query");
            return (Criteria) this;
        }

        public Criteria andQueryGreaterThanOrEqualTo(String value) {
            addCriterion("query >=", value, "query");
            return (Criteria) this;
        }

        public Criteria andQueryLessThan(String value) {
            addCriterion("query <", value, "query");
            return (Criteria) this;
        }

        public Criteria andQueryLessThanOrEqualTo(String value) {
            addCriterion("query <=", value, "query");
            return (Criteria) this;
        }

        public Criteria andQueryLike(String value) {
            addCriterion("query like", value, "query");
            return (Criteria) this;
        }

        public Criteria andQueryNotLike(String value) {
            addCriterion("query not like", value, "query");
            return (Criteria) this;
        }

        public Criteria andQueryIn(List<String> values) {
            addCriterion("query in", values, "query");
            return (Criteria) this;
        }

        public Criteria andQueryNotIn(List<String> values) {
            addCriterion("query not in", values, "query");
            return (Criteria) this;
        }

        public Criteria andQueryBetween(String value1, String value2) {
            addCriterion("query between", value1, value2, "query");
            return (Criteria) this;
        }

        public Criteria andQueryNotBetween(String value1, String value2) {
            addCriterion("query not between", value1, value2, "query");
            return (Criteria) this;
        }

        public Criteria andDurationIsNull() {
            addCriterion("duration is null");
            return (Criteria) this;
        }

        public Criteria andDurationIsNotNull() {
            addCriterion("duration is not null");
            return (Criteria) this;
        }

        public Criteria andDurationEqualTo(Long value) {
            addCriterion("duration =", value, "duration");
            return (Criteria) this;
        }

        public Criteria andDurationNotEqualTo(Long value) {
            addCriterion("duration <>", value, "duration");
            return (Criteria) this;
        }

        public Criteria andDurationGreaterThan(Long value) {
            addCriterion("duration >", value, "duration");
            return (Criteria) this;
        }

        public Criteria andDurationGreaterThanOrEqualTo(Long value) {
            addCriterion("duration >=", value, "duration");
            return (Criteria) this;
        }

        public Criteria andDurationLessThan(Long value) {
            addCriterion("duration <", value, "duration");
            return (Criteria) this;
        }

        public Criteria andDurationLessThanOrEqualTo(Long value) {
            addCriterion("duration <=", value, "duration");
            return (Criteria) this;
        }

        public Criteria andDurationIn(List<Long> values) {
            addCriterion("duration in", values, "duration");
            return (Criteria) this;
        }

        public Criteria andDurationNotIn(List<Long> values) {
            addCriterion("duration not in", values, "duration");
            return (Criteria) this;
        }

        public Criteria andDurationBetween(Long value1, Long value2) {
            addCriterion("duration between", value1, value2, "duration");
            return (Criteria) this;
        }

        public Criteria andDurationNotBetween(Long value1, Long value2) {
            addCriterion("duration not between", value1, value2, "duration");
            return (Criteria) this;
        }

        public Criteria andStartTimeIsNull() {
            addCriterion("start_time is null");
            return (Criteria) this;
        }

        public Criteria andStartTimeIsNotNull() {
            addCriterion("start_time is not null");
            return (Criteria) this;
        }

        public Criteria andStartTimeEqualTo(Date value) {
            addCriterion("start_time =", value, "startTime");
            return (Criteria) this;
        }

        public Criteria andStartTimeNotEqualTo(Date value) {
            addCriterion("start_time <>", value, "startTime");
            return (Criteria) this;
        }

        public Criteria andStartTimeGreaterThan(Date value) {
            addCriterion("start_time >", value, "startTime");
            return (Criteria) this;
        }

        public Criteria andStartTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("start_time >=", value, "startTime");
            return (Criteria) this;
        }

        public Criteria andStartTimeLessThan(Date value) {
            addCriterion("start_time <", value, "startTime");
            return (Criteria) this;
        }

        public Criteria andStartTimeLessThanOrEqualTo(Date value) {
            addCriterion("start_time <=", value, "startTime");
            return (Criteria) this;
        }

        public Criteria andStartTimeIn(List<Date> values) {
            addCriterion("start_time in", values, "startTime");
            return (Criteria) this;
        }

        public Criteria andStartTimeNotIn(List<Date> values) {
            addCriterion("start_time not in", values, "startTime");
            return (Criteria) this;
        }

        public Criteria andStartTimeBetween(Date value1, Date value2) {
            addCriterion("start_time between", value1, value2, "startTime");
            return (Criteria) this;
        }

        public Criteria andStartTimeNotBetween(Date value1, Date value2) {
            addCriterion("start_time not between", value1, value2, "startTime");
            return (Criteria) this;
        }

        public Criteria andEndTimeIsNull() {
            addCriterion("end_time is null");
            return (Criteria) this;
        }

        public Criteria andEndTimeIsNotNull() {
            addCriterion("end_time is not null");
            return (Criteria) this;
        }

        public Criteria andEndTimeEqualTo(Date value) {
            addCriterion("end_time =", value, "endTime");
            return (Criteria) this;
        }

        public Criteria andEndTimeNotEqualTo(Date value) {
            addCriterion("end_time <>", value, "endTime");
            return (Criteria) this;
        }

        public Criteria andEndTimeGreaterThan(Date value) {
            addCriterion("end_time >", value, "endTime");
            return (Criteria) this;
        }

        public Criteria andEndTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("end_time >=", value, "endTime");
            return (Criteria) this;
        }

        public Criteria andEndTimeLessThan(Date value) {
            addCriterion("end_time <", value, "endTime");
            return (Criteria) this;
        }

        public Criteria andEndTimeLessThanOrEqualTo(Date value) {
            addCriterion("end_time <=", value, "endTime");
            return (Criteria) this;
        }

        public Criteria andEndTimeIn(List<Date> values) {
            addCriterion("end_time in", values, "endTime");
            return (Criteria) this;
        }

        public Criteria andEndTimeNotIn(List<Date> values) {
            addCriterion("end_time not in", values, "endTime");
            return (Criteria) this;
        }

        public Criteria andEndTimeBetween(Date value1, Date value2) {
            addCriterion("end_time between", value1, value2, "endTime");
            return (Criteria) this;
        }

        public Criteria andEndTimeNotBetween(Date value1, Date value2) {
            addCriterion("end_time not between", value1, value2, "endTime");
            return (Criteria) this;
        }

        public Criteria andIdEqualToWhenPresent(Long value) {
            if(value != null) {
                addCriterion("id =", value, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdNotEqualToWhenPresent(Long value) {
            if(value != null) {
                addCriterion("id <>", value, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanWhenPresent(Long value) {
            if(value != null) {
                addCriterion("id >", value, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualToWhenPresent(Long value) {
            if(value != null) {
                addCriterion("id >=", value, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdLessThanWhenPresent(Long value) {
            if(value != null) {
                addCriterion("id <", value, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualToWhenPresent(Long value) {
            if(value != null) {
                addCriterion("id <=", value, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdInWhenPresent(List<Long> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("id in", values, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdNotInWhenPresent(List<Long> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("id not in", values, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdBetweenWhenPresent(Long value1, Long value2) {
            if(value1 != null && value2 != null){
                addCriterion("id between", value1, value2, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdNotBetweenWhenPresent(Long value1, Long value2) {
            if(value1 != null && value2 != null){
                addCriterion("id not between", value1, value2, "id");
            }
            return (Criteria) this;
        }

        public Criteria andGmtCreateEqualToWhenPresent(Date value) {
            if(value != null) {
                addCriterion("gmt_create =", value, "gmtCreate");
            }
            return (Criteria) this;
        }

        public Criteria andGmtCreateNotEqualToWhenPresent(Date value) {
            if(value != null) {
                addCriterion("gmt_create <>", value, "gmtCreate");
            }
            return (Criteria) this;
        }

        public Criteria andGmtCreateGreaterThanWhenPresent(Date value) {
            if(value != null) {
                addCriterion("gmt_create >", value, "gmtCreate");
            }
            return (Criteria) this;
        }

        public Criteria andGmtCreateGreaterThanOrEqualToWhenPresent(Date value) {
            if(value != null) {
                addCriterion("gmt_create >=", value, "gmtCreate");
            }
            return (Criteria) this;
        }

        public Criteria andGmtCreateLessThanWhenPresent(Date value) {
            if(value != null) {
                addCriterion("gmt_create <", value, "gmtCreate");
            }
            return (Criteria) this;
        }

        public Criteria andGmtCreateLessThanOrEqualToWhenPresent(Date value) {
            if(value != null) {
                addCriterion("gmt_create <=", value, "gmtCreate");
            }
            return (Criteria) this;
        }

        public Criteria andGmtCreateInWhenPresent(List<Date> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("gmt_create in", values, "gmtCreate");
            }
            return (Criteria) this;
        }

        public Criteria andGmtCreateNotInWhenPresent(List<Date> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("gmt_create not in", values, "gmtCreate");
            }
            return (Criteria) this;
        }

        public Criteria andGmtCreateBetweenWhenPresent(Date value1, Date value2) {
            if(value1 != null && value2 != null){
                addCriterion("gmt_create between", value1, value2, "gmtCreate");
            }
            return (Criteria) this;
        }

        public Criteria andGmtCreateNotBetweenWhenPresent(Date value1, Date value2) {
            if(value1 != null && value2 != null){
                addCriterion("gmt_create not between", value1, value2, "gmtCreate");
            }
            return (Criteria) this;
        }

        public Criteria andGmtModifiedEqualToWhenPresent(Date value) {
            if(value != null) {
                addCriterion("gmt_modified =", value, "gmtModified");
            }
            return (Criteria) this;
        }

        public Criteria andGmtModifiedNotEqualToWhenPresent(Date value) {
            if(value != null) {
                addCriterion("gmt_modified <>", value, "gmtModified");
            }
            return (Criteria) this;
        }

        public Criteria andGmtModifiedGreaterThanWhenPresent(Date value) {
            if(value != null) {
                addCriterion("gmt_modified >", value, "gmtModified");
            }
            return (Criteria) this;
        }

        public Criteria andGmtModifiedGreaterThanOrEqualToWhenPresent(Date value) {
            if(value != null) {
                addCriterion("gmt_modified >=", value, "gmtModified");
            }
            return (Criteria) this;
        }

        public Criteria andGmtModifiedLessThanWhenPresent(Date value) {
            if(value != null) {
                addCriterion("gmt_modified <", value, "gmtModified");
            }
            return (Criteria) this;
        }

        public Criteria andGmtModifiedLessThanOrEqualToWhenPresent(Date value) {
            if(value != null) {
                addCriterion("gmt_modified <=", value, "gmtModified");
            }
            return (Criteria) this;
        }

        public Criteria andGmtModifiedInWhenPresent(List<Date> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("gmt_modified in", values, "gmtModified");
            }
            return (Criteria) this;
        }

        public Criteria andGmtModifiedNotInWhenPresent(List<Date> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("gmt_modified not in", values, "gmtModified");
            }
            return (Criteria) this;
        }

        public Criteria andGmtModifiedBetweenWhenPresent(Date value1, Date value2) {
            if(value1 != null && value2 != null){
                addCriterion("gmt_modified between", value1, value2, "gmtModified");
            }
            return (Criteria) this;
        }

        public Criteria andGmtModifiedNotBetweenWhenPresent(Date value1, Date value2) {
            if(value1 != null && value2 != null){
                addCriterion("gmt_modified not between", value1, value2, "gmtModified");
            }
            return (Criteria) this;
        }

        public Criteria andTenantIdEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("tenant_id =", value, "tenantId");
            }
            return (Criteria) this;
        }

        public Criteria andTenantIdNotEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("tenant_id <>", value, "tenantId");
            }
            return (Criteria) this;
        }

        public Criteria andTenantIdGreaterThanWhenPresent(String value) {
            if(value != null) {
                addCriterion("tenant_id >", value, "tenantId");
            }
            return (Criteria) this;
        }

        public Criteria andTenantIdGreaterThanOrEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("tenant_id >=", value, "tenantId");
            }
            return (Criteria) this;
        }

        public Criteria andTenantIdLessThanWhenPresent(String value) {
            if(value != null) {
                addCriterion("tenant_id <", value, "tenantId");
            }
            return (Criteria) this;
        }

        public Criteria andTenantIdLessThanOrEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("tenant_id <=", value, "tenantId");
            }
            return (Criteria) this;
        }

        public Criteria andTenantIdLikeWhenPresent(String value) {
            if(value != null) {
                addCriterion("tenant_id like", value, "tenantId");
            }
            return (Criteria) this;
        }

        public Criteria andTenantIdNotLikeWhenPresent(String value) {
            if(value != null) {
                addCriterion("tenant_id not like", value, "tenantId");
            }
            return (Criteria) this;
        }

        public Criteria andTenantIdInWhenPresent(List<String> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("tenant_id in", values, "tenantId");
            }
            return (Criteria) this;
        }

        public Criteria andTenantIdNotInWhenPresent(List<String> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("tenant_id not in", values, "tenantId");
            }
            return (Criteria) this;
        }

        public Criteria andTenantIdBetweenWhenPresent(String value1, String value2) {
            if(value1 != null && value2 != null){
                addCriterion("tenant_id between", value1, value2, "tenantId");
            }
            return (Criteria) this;
        }

        public Criteria andTenantIdNotBetweenWhenPresent(String value1, String value2) {
            if(value1 != null && value2 != null){
                addCriterion("tenant_id not between", value1, value2, "tenantId");
            }
            return (Criteria) this;
        }

        public Criteria andUserIdEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("user_id =", value, "userId");
            }
            return (Criteria) this;
        }

        public Criteria andUserIdNotEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("user_id <>", value, "userId");
            }
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThanWhenPresent(String value) {
            if(value != null) {
                addCriterion("user_id >", value, "userId");
            }
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThanOrEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("user_id >=", value, "userId");
            }
            return (Criteria) this;
        }

        public Criteria andUserIdLessThanWhenPresent(String value) {
            if(value != null) {
                addCriterion("user_id <", value, "userId");
            }
            return (Criteria) this;
        }

        public Criteria andUserIdLessThanOrEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("user_id <=", value, "userId");
            }
            return (Criteria) this;
        }

        public Criteria andUserIdLikeWhenPresent(String value) {
            if(value != null) {
                addCriterion("user_id like", value, "userId");
            }
            return (Criteria) this;
        }

        public Criteria andUserIdNotLikeWhenPresent(String value) {
            if(value != null) {
                addCriterion("user_id not like", value, "userId");
            }
            return (Criteria) this;
        }

        public Criteria andUserIdInWhenPresent(List<String> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("user_id in", values, "userId");
            }
            return (Criteria) this;
        }

        public Criteria andUserIdNotInWhenPresent(List<String> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("user_id not in", values, "userId");
            }
            return (Criteria) this;
        }

        public Criteria andUserIdBetweenWhenPresent(String value1, String value2) {
            if(value1 != null && value2 != null){
                addCriterion("user_id between", value1, value2, "userId");
            }
            return (Criteria) this;
        }

        public Criteria andUserIdNotBetweenWhenPresent(String value1, String value2) {
            if(value1 != null && value2 != null){
                addCriterion("user_id not between", value1, value2, "userId");
            }
            return (Criteria) this;
        }

        public Criteria andTraceIdEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("trace_id =", value, "traceId");
            }
            return (Criteria) this;
        }

        public Criteria andTraceIdNotEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("trace_id <>", value, "traceId");
            }
            return (Criteria) this;
        }

        public Criteria andTraceIdGreaterThanWhenPresent(String value) {
            if(value != null) {
                addCriterion("trace_id >", value, "traceId");
            }
            return (Criteria) this;
        }

        public Criteria andTraceIdGreaterThanOrEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("trace_id >=", value, "traceId");
            }
            return (Criteria) this;
        }

        public Criteria andTraceIdLessThanWhenPresent(String value) {
            if(value != null) {
                addCriterion("trace_id <", value, "traceId");
            }
            return (Criteria) this;
        }

        public Criteria andTraceIdLessThanOrEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("trace_id <=", value, "traceId");
            }
            return (Criteria) this;
        }

        public Criteria andTraceIdLikeWhenPresent(String value) {
            if(value != null) {
                addCriterion("trace_id like", value, "traceId");
            }
            return (Criteria) this;
        }

        public Criteria andTraceIdNotLikeWhenPresent(String value) {
            if(value != null) {
                addCriterion("trace_id not like", value, "traceId");
            }
            return (Criteria) this;
        }

        public Criteria andTraceIdInWhenPresent(List<String> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("trace_id in", values, "traceId");
            }
            return (Criteria) this;
        }

        public Criteria andTraceIdNotInWhenPresent(List<String> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("trace_id not in", values, "traceId");
            }
            return (Criteria) this;
        }

        public Criteria andTraceIdBetweenWhenPresent(String value1, String value2) {
            if(value1 != null && value2 != null){
                addCriterion("trace_id between", value1, value2, "traceId");
            }
            return (Criteria) this;
        }

        public Criteria andTraceIdNotBetweenWhenPresent(String value1, String value2) {
            if(value1 != null && value2 != null){
                addCriterion("trace_id not between", value1, value2, "traceId");
            }
            return (Criteria) this;
        }

        public Criteria andMethodEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("method =", value, "method");
            }
            return (Criteria) this;
        }

        public Criteria andMethodNotEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("method <>", value, "method");
            }
            return (Criteria) this;
        }

        public Criteria andMethodGreaterThanWhenPresent(String value) {
            if(value != null) {
                addCriterion("method >", value, "method");
            }
            return (Criteria) this;
        }

        public Criteria andMethodGreaterThanOrEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("method >=", value, "method");
            }
            return (Criteria) this;
        }

        public Criteria andMethodLessThanWhenPresent(String value) {
            if(value != null) {
                addCriterion("method <", value, "method");
            }
            return (Criteria) this;
        }

        public Criteria andMethodLessThanOrEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("method <=", value, "method");
            }
            return (Criteria) this;
        }

        public Criteria andMethodLikeWhenPresent(String value) {
            if(value != null) {
                addCriterion("method like", value, "method");
            }
            return (Criteria) this;
        }

        public Criteria andMethodNotLikeWhenPresent(String value) {
            if(value != null) {
                addCriterion("method not like", value, "method");
            }
            return (Criteria) this;
        }

        public Criteria andMethodInWhenPresent(List<String> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("method in", values, "method");
            }
            return (Criteria) this;
        }

        public Criteria andMethodNotInWhenPresent(List<String> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("method not in", values, "method");
            }
            return (Criteria) this;
        }

        public Criteria andMethodBetweenWhenPresent(String value1, String value2) {
            if(value1 != null && value2 != null){
                addCriterion("method between", value1, value2, "method");
            }
            return (Criteria) this;
        }

        public Criteria andMethodNotBetweenWhenPresent(String value1, String value2) {
            if(value1 != null && value2 != null){
                addCriterion("method not between", value1, value2, "method");
            }
            return (Criteria) this;
        }

        public Criteria andModuleEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("module =", value, "module");
            }
            return (Criteria) this;
        }

        public Criteria andModuleNotEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("module <>", value, "module");
            }
            return (Criteria) this;
        }

        public Criteria andModuleGreaterThanWhenPresent(String value) {
            if(value != null) {
                addCriterion("module >", value, "module");
            }
            return (Criteria) this;
        }

        public Criteria andModuleGreaterThanOrEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("module >=", value, "module");
            }
            return (Criteria) this;
        }

        public Criteria andModuleLessThanWhenPresent(String value) {
            if(value != null) {
                addCriterion("module <", value, "module");
            }
            return (Criteria) this;
        }

        public Criteria andModuleLessThanOrEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("module <=", value, "module");
            }
            return (Criteria) this;
        }

        public Criteria andModuleLikeWhenPresent(String value) {
            if(value != null) {
                addCriterion("module like", value, "module");
            }
            return (Criteria) this;
        }

        public Criteria andModuleNotLikeWhenPresent(String value) {
            if(value != null) {
                addCriterion("module not like", value, "module");
            }
            return (Criteria) this;
        }

        public Criteria andModuleInWhenPresent(List<String> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("module in", values, "module");
            }
            return (Criteria) this;
        }

        public Criteria andModuleNotInWhenPresent(List<String> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("module not in", values, "module");
            }
            return (Criteria) this;
        }

        public Criteria andModuleBetweenWhenPresent(String value1, String value2) {
            if(value1 != null && value2 != null){
                addCriterion("module between", value1, value2, "module");
            }
            return (Criteria) this;
        }

        public Criteria andModuleNotBetweenWhenPresent(String value1, String value2) {
            if(value1 != null && value2 != null){
                addCriterion("module not between", value1, value2, "module");
            }
            return (Criteria) this;
        }

        public Criteria andPathEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("path =", value, "path");
            }
            return (Criteria) this;
        }

        public Criteria andPathNotEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("path <>", value, "path");
            }
            return (Criteria) this;
        }

        public Criteria andPathGreaterThanWhenPresent(String value) {
            if(value != null) {
                addCriterion("path >", value, "path");
            }
            return (Criteria) this;
        }

        public Criteria andPathGreaterThanOrEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("path >=", value, "path");
            }
            return (Criteria) this;
        }

        public Criteria andPathLessThanWhenPresent(String value) {
            if(value != null) {
                addCriterion("path <", value, "path");
            }
            return (Criteria) this;
        }

        public Criteria andPathLessThanOrEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("path <=", value, "path");
            }
            return (Criteria) this;
        }

        public Criteria andPathLikeWhenPresent(String value) {
            if(value != null) {
                addCriterion("path like", value, "path");
            }
            return (Criteria) this;
        }

        public Criteria andPathNotLikeWhenPresent(String value) {
            if(value != null) {
                addCriterion("path not like", value, "path");
            }
            return (Criteria) this;
        }

        public Criteria andPathInWhenPresent(List<String> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("path in", values, "path");
            }
            return (Criteria) this;
        }

        public Criteria andPathNotInWhenPresent(List<String> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("path not in", values, "path");
            }
            return (Criteria) this;
        }

        public Criteria andPathBetweenWhenPresent(String value1, String value2) {
            if(value1 != null && value2 != null){
                addCriterion("path between", value1, value2, "path");
            }
            return (Criteria) this;
        }

        public Criteria andPathNotBetweenWhenPresent(String value1, String value2) {
            if(value1 != null && value2 != null){
                addCriterion("path not between", value1, value2, "path");
            }
            return (Criteria) this;
        }

        public Criteria andQueryEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("query =", value, "query");
            }
            return (Criteria) this;
        }

        public Criteria andQueryNotEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("query <>", value, "query");
            }
            return (Criteria) this;
        }

        public Criteria andQueryGreaterThanWhenPresent(String value) {
            if(value != null) {
                addCriterion("query >", value, "query");
            }
            return (Criteria) this;
        }

        public Criteria andQueryGreaterThanOrEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("query >=", value, "query");
            }
            return (Criteria) this;
        }

        public Criteria andQueryLessThanWhenPresent(String value) {
            if(value != null) {
                addCriterion("query <", value, "query");
            }
            return (Criteria) this;
        }

        public Criteria andQueryLessThanOrEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("query <=", value, "query");
            }
            return (Criteria) this;
        }

        public Criteria andQueryLikeWhenPresent(String value) {
            if(value != null) {
                addCriterion("query like", value, "query");
            }
            return (Criteria) this;
        }

        public Criteria andQueryNotLikeWhenPresent(String value) {
            if(value != null) {
                addCriterion("query not like", value, "query");
            }
            return (Criteria) this;
        }

        public Criteria andQueryInWhenPresent(List<String> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("query in", values, "query");
            }
            return (Criteria) this;
        }

        public Criteria andQueryNotInWhenPresent(List<String> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("query not in", values, "query");
            }
            return (Criteria) this;
        }

        public Criteria andQueryBetweenWhenPresent(String value1, String value2) {
            if(value1 != null && value2 != null){
                addCriterion("query between", value1, value2, "query");
            }
            return (Criteria) this;
        }

        public Criteria andQueryNotBetweenWhenPresent(String value1, String value2) {
            if(value1 != null && value2 != null){
                addCriterion("query not between", value1, value2, "query");
            }
            return (Criteria) this;
        }

        public Criteria andDurationEqualToWhenPresent(Long value) {
            if(value != null) {
                addCriterion("duration =", value, "duration");
            }
            return (Criteria) this;
        }

        public Criteria andDurationNotEqualToWhenPresent(Long value) {
            if(value != null) {
                addCriterion("duration <>", value, "duration");
            }
            return (Criteria) this;
        }

        public Criteria andDurationGreaterThanWhenPresent(Long value) {
            if(value != null) {
                addCriterion("duration >", value, "duration");
            }
            return (Criteria) this;
        }

        public Criteria andDurationGreaterThanOrEqualToWhenPresent(Long value) {
            if(value != null) {
                addCriterion("duration >=", value, "duration");
            }
            return (Criteria) this;
        }

        public Criteria andDurationLessThanWhenPresent(Long value) {
            if(value != null) {
                addCriterion("duration <", value, "duration");
            }
            return (Criteria) this;
        }

        public Criteria andDurationLessThanOrEqualToWhenPresent(Long value) {
            if(value != null) {
                addCriterion("duration <=", value, "duration");
            }
            return (Criteria) this;
        }

        public Criteria andDurationInWhenPresent(List<Long> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("duration in", values, "duration");
            }
            return (Criteria) this;
        }

        public Criteria andDurationNotInWhenPresent(List<Long> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("duration not in", values, "duration");
            }
            return (Criteria) this;
        }

        public Criteria andDurationBetweenWhenPresent(Long value1, Long value2) {
            if(value1 != null && value2 != null){
                addCriterion("duration between", value1, value2, "duration");
            }
            return (Criteria) this;
        }

        public Criteria andDurationNotBetweenWhenPresent(Long value1, Long value2) {
            if(value1 != null && value2 != null){
                addCriterion("duration not between", value1, value2, "duration");
            }
            return (Criteria) this;
        }

        public Criteria andStartTimeEqualToWhenPresent(Date value) {
            if(value != null) {
                addCriterion("start_time =", value, "startTime");
            }
            return (Criteria) this;
        }

        public Criteria andStartTimeNotEqualToWhenPresent(Date value) {
            if(value != null) {
                addCriterion("start_time <>", value, "startTime");
            }
            return (Criteria) this;
        }

        public Criteria andStartTimeGreaterThanWhenPresent(Date value) {
            if(value != null) {
                addCriterion("start_time >", value, "startTime");
            }
            return (Criteria) this;
        }

        public Criteria andStartTimeGreaterThanOrEqualToWhenPresent(Date value) {
            if(value != null) {
                addCriterion("start_time >=", value, "startTime");
            }
            return (Criteria) this;
        }

        public Criteria andStartTimeLessThanWhenPresent(Date value) {
            if(value != null) {
                addCriterion("start_time <", value, "startTime");
            }
            return (Criteria) this;
        }

        public Criteria andStartTimeLessThanOrEqualToWhenPresent(Date value) {
            if(value != null) {
                addCriterion("start_time <=", value, "startTime");
            }
            return (Criteria) this;
        }

        public Criteria andStartTimeInWhenPresent(List<Date> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("start_time in", values, "startTime");
            }
            return (Criteria) this;
        }

        public Criteria andStartTimeNotInWhenPresent(List<Date> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("start_time not in", values, "startTime");
            }
            return (Criteria) this;
        }

        public Criteria andStartTimeBetweenWhenPresent(Date value1, Date value2) {
            if(value1 != null && value2 != null){
                addCriterion("start_time between", value1, value2, "startTime");
            }
            return (Criteria) this;
        }

        public Criteria andStartTimeNotBetweenWhenPresent(Date value1, Date value2) {
            if(value1 != null && value2 != null){
                addCriterion("start_time not between", value1, value2, "startTime");
            }
            return (Criteria) this;
        }

        public Criteria andEndTimeEqualToWhenPresent(Date value) {
            if(value != null) {
                addCriterion("end_time =", value, "endTime");
            }
            return (Criteria) this;
        }

        public Criteria andEndTimeNotEqualToWhenPresent(Date value) {
            if(value != null) {
                addCriterion("end_time <>", value, "endTime");
            }
            return (Criteria) this;
        }

        public Criteria andEndTimeGreaterThanWhenPresent(Date value) {
            if(value != null) {
                addCriterion("end_time >", value, "endTime");
            }
            return (Criteria) this;
        }

        public Criteria andEndTimeGreaterThanOrEqualToWhenPresent(Date value) {
            if(value != null) {
                addCriterion("end_time >=", value, "endTime");
            }
            return (Criteria) this;
        }

        public Criteria andEndTimeLessThanWhenPresent(Date value) {
            if(value != null) {
                addCriterion("end_time <", value, "endTime");
            }
            return (Criteria) this;
        }

        public Criteria andEndTimeLessThanOrEqualToWhenPresent(Date value) {
            if(value != null) {
                addCriterion("end_time <=", value, "endTime");
            }
            return (Criteria) this;
        }

        public Criteria andEndTimeInWhenPresent(List<Date> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("end_time in", values, "endTime");
            }
            return (Criteria) this;
        }

        public Criteria andEndTimeNotInWhenPresent(List<Date> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("end_time not in", values, "endTime");
            }
            return (Criteria) this;
        }

        public Criteria andEndTimeBetweenWhenPresent(Date value1, Date value2) {
            if(value1 != null && value2 != null){
                addCriterion("end_time between", value1, value2, "endTime");
            }
            return (Criteria) this;
        }

        public Criteria andEndTimeNotBetweenWhenPresent(Date value1, Date value2) {
            if(value1 != null && value2 != null){
                addCriterion("end_time not between", value1, value2, "endTime");
            }
            return (Criteria) this;
        }
    }

    /**
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends AbstractGeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    /**
     *
     * @mbg.generated
     */
    public enum OrderCondition {
        /**
         *主键
         */
        ID("id"),
        /**
         *创建时间
         */
        GMTCREATE("gmt_create"),
        /**
         *修改时间
         */
        GMTMODIFIED("gmt_modified"),
        /**
         *租户
         */
        TENANTID("tenant_id"),
        /**
         *用户id
         */
        USERID("user_id"),
        /**
         *跟踪编码
         */
        TRACEID("trace_id"),
        /**
         *方法
         */
        METHOD("method"),
        /**
         *模块
         */
        MODULE("module"),
        /**
         *请求路径
         */
        PATH("path"),
        /**
         *查询条件
         */
        QUERY("query"),
        /**
         *耗时 ms
         */
        DURATION("duration"),
        /**
         *开始时间
         */
        STARTTIME("start_time"),
        /**
         *结束时间
         */
        ENDTIME("end_time");

        private String columnName;

        OrderCondition(String columnName) {
            this.columnName = columnName;
        }

        public String getColumnName() {
            return columnName;
        }

        public static OrderCondition getEnumByName(String name) {
            OrderCondition[] orderConditions = OrderCondition.values();
            for (OrderCondition orderCondition : orderConditions) {
                if (orderCondition.name().equalsIgnoreCase(name)) {
                    return orderCondition;
                }
            }
            throw new RuntimeException("OrderCondition of " + name + " enum not exist");
        }

        @Override
        public String toString() {
            return columnName;
        }
    }

    /**
     *
     * @mbg.generated
     */
    public enum SortType {
        /**
         * 升序
         */
        ASC("asc"),
        /**
         * 降序
         */
        DESC("desc");

        private String value;

        SortType(String value) {
            this.value = value;
        }

        public String getValue() {
            return value;
        }

        public static SortType getEnumByName(String name) {
            SortType[] sortTypes = SortType.values();
            for (SortType sortType : sortTypes) {
                if (sortType.name().equalsIgnoreCase(name)) {
                    return sortType;
                }
            }
            throw new RuntimeException("SortType of " + name + " enum not exist");
        }

        @Override
        public String toString() {
            return value;
        }
    }
}