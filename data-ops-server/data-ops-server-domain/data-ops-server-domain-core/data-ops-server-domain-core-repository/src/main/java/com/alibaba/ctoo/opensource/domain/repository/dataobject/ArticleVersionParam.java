package com.alibaba.ctoo.opensource.domain.repository.dataobject;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

/**
 * This class was generated by Ali-Generator
 * @author zhuangjiaju
 */
public class ArticleVersionParam {
    /**
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     *
     * @mbg.generated
     */
    @Deprecated
    protected boolean distinct;

    /**
     *
     * @mbg.generated
     */
    protected boolean page;

    /**
     *
     * @mbg.generated
     */
    protected int pageIndex;

    /**
     *
     * @mbg.generated
     */
    protected int pageSize;

    /**
     *
     * @mbg.generated
     */
    protected int pageStart;

    /**
     *
     * @mbg.generated
     */
    protected String distinctSql;

    /**
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     *
     * @mbg.generated
     */
    public ArticleVersionParam() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * @param orderCondition
     * @param sortType
     * @return
     *
     * @mbg.generated
     */
    public ArticleVersionParam appendOrderByClause(OrderCondition orderCondition, SortType sortType) {
        if (null != orderByClause) {
            orderByClause = orderByClause + ", " + orderCondition.getColumnName() + " " + sortType.getValue();
        } else {
            orderByClause = orderCondition.getColumnName() + " " + sortType.getValue();
        }
        return this;
    }

    /**
     * @return
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * @param distinct
     *
     * @mbg.generated
     */
    @Deprecated
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * @return
     *
     * @mbg.generated
     */
    @Deprecated
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * @param page
     * @return
     *
     * @mbg.generated
     */
    public ArticleVersionParam setPage(boolean page) {
        this.page = page;
        return this;
    }

    /**
     * @return
     *
     * @mbg.generated
     */
    public boolean isPage() {
        return page;
    }

    /**
     * @return
     *
     * @mbg.generated
     */
    public int getPageIndex() {
        return pageIndex;
    }

    /**
     * @param pageSize
     * @return
     *
     * @mbg.generated
     */
    public ArticleVersionParam setPageSize(int pageSize) {
        this.pageSize = pageSize < 1 ? 10 : pageSize;
        this.pageIndex = pageStart < 1 ? 0 : (pageStart - 1) * this.pageSize;
        return this;
    }

    /**
     * @return
     *
     * @mbg.generated
     */
    public int getPageSize() {
        return pageSize;
    }

    /**
     * @param pageStart
     * @return
     *
     * @mbg.generated
     */
    public ArticleVersionParam setPageStart(int pageStart) {
        this.pageStart = pageStart < 1 ? 1 : pageStart;
        this.pageIndex = (this.pageStart - 1) * this.pageSize;
        return this;
    }

    /**
     * @return
     *
     * @mbg.generated
     */
    public int getPageStart() {
        return pageStart;
    }

    /**
     * @param pageStart
     * @param pageSize
     *
     * @mbg.generated
     */
    public void setPagination(int pageStart, int pageSize) {
        this.page = true;
        this.pageSize = pageSize < 1 ? 10 : pageSize;
        this.pageIndex = pageStart < 1 ? 0 : (pageStart - 1) * this.pageSize;
    }

    /**
     * @param condition
     * @return
     *
     * @mbg.generated
     */
    public ArticleVersionParam appendDistinct(OrderCondition condition) {
        if (null != distinctSql){
            distinctSql = distinctSql + ", " + condition.getColumnName();
        } else {
            distinctSql = condition.getColumnName();
        }
        return this;
    }

    /**
     * @return
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * @param criteria
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * @return
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * @return
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * @return
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     *
     * @mbg.generated
     */
    protected abstract static class AbstractGeneratedCriteria {
        protected List<Criterion> criteria;

        protected AbstractGeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andGmtCreateIsNull() {
            addCriterion("gmt_create is null");
            return (Criteria) this;
        }

        public Criteria andGmtCreateIsNotNull() {
            addCriterion("gmt_create is not null");
            return (Criteria) this;
        }

        public Criteria andGmtCreateEqualTo(Date value) {
            addCriterion("gmt_create =", value, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateNotEqualTo(Date value) {
            addCriterion("gmt_create <>", value, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateGreaterThan(Date value) {
            addCriterion("gmt_create >", value, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateGreaterThanOrEqualTo(Date value) {
            addCriterion("gmt_create >=", value, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateLessThan(Date value) {
            addCriterion("gmt_create <", value, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateLessThanOrEqualTo(Date value) {
            addCriterion("gmt_create <=", value, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateIn(List<Date> values) {
            addCriterion("gmt_create in", values, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateNotIn(List<Date> values) {
            addCriterion("gmt_create not in", values, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateBetween(Date value1, Date value2) {
            addCriterion("gmt_create between", value1, value2, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateNotBetween(Date value1, Date value2) {
            addCriterion("gmt_create not between", value1, value2, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedIsNull() {
            addCriterion("gmt_modified is null");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedIsNotNull() {
            addCriterion("gmt_modified is not null");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedEqualTo(Date value) {
            addCriterion("gmt_modified =", value, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedNotEqualTo(Date value) {
            addCriterion("gmt_modified <>", value, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedGreaterThan(Date value) {
            addCriterion("gmt_modified >", value, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedGreaterThanOrEqualTo(Date value) {
            addCriterion("gmt_modified >=", value, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedLessThan(Date value) {
            addCriterion("gmt_modified <", value, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedLessThanOrEqualTo(Date value) {
            addCriterion("gmt_modified <=", value, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedIn(List<Date> values) {
            addCriterion("gmt_modified in", values, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedNotIn(List<Date> values) {
            addCriterion("gmt_modified not in", values, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedBetween(Date value1, Date value2) {
            addCriterion("gmt_modified between", value1, value2, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedNotBetween(Date value1, Date value2) {
            addCriterion("gmt_modified not between", value1, value2, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andCreatorIsNull() {
            addCriterion("creator is null");
            return (Criteria) this;
        }

        public Criteria andCreatorIsNotNull() {
            addCriterion("creator is not null");
            return (Criteria) this;
        }

        public Criteria andCreatorEqualTo(String value) {
            addCriterion("creator =", value, "creator");
            return (Criteria) this;
        }

        public Criteria andCreatorNotEqualTo(String value) {
            addCriterion("creator <>", value, "creator");
            return (Criteria) this;
        }

        public Criteria andCreatorGreaterThan(String value) {
            addCriterion("creator >", value, "creator");
            return (Criteria) this;
        }

        public Criteria andCreatorGreaterThanOrEqualTo(String value) {
            addCriterion("creator >=", value, "creator");
            return (Criteria) this;
        }

        public Criteria andCreatorLessThan(String value) {
            addCriterion("creator <", value, "creator");
            return (Criteria) this;
        }

        public Criteria andCreatorLessThanOrEqualTo(String value) {
            addCriterion("creator <=", value, "creator");
            return (Criteria) this;
        }

        public Criteria andCreatorLike(String value) {
            addCriterion("creator like", value, "creator");
            return (Criteria) this;
        }

        public Criteria andCreatorNotLike(String value) {
            addCriterion("creator not like", value, "creator");
            return (Criteria) this;
        }

        public Criteria andCreatorIn(List<String> values) {
            addCriterion("creator in", values, "creator");
            return (Criteria) this;
        }

        public Criteria andCreatorNotIn(List<String> values) {
            addCriterion("creator not in", values, "creator");
            return (Criteria) this;
        }

        public Criteria andCreatorBetween(String value1, String value2) {
            addCriterion("creator between", value1, value2, "creator");
            return (Criteria) this;
        }

        public Criteria andCreatorNotBetween(String value1, String value2) {
            addCriterion("creator not between", value1, value2, "creator");
            return (Criteria) this;
        }

        public Criteria andModifierIsNull() {
            addCriterion("modifier is null");
            return (Criteria) this;
        }

        public Criteria andModifierIsNotNull() {
            addCriterion("modifier is not null");
            return (Criteria) this;
        }

        public Criteria andModifierEqualTo(String value) {
            addCriterion("modifier =", value, "modifier");
            return (Criteria) this;
        }

        public Criteria andModifierNotEqualTo(String value) {
            addCriterion("modifier <>", value, "modifier");
            return (Criteria) this;
        }

        public Criteria andModifierGreaterThan(String value) {
            addCriterion("modifier >", value, "modifier");
            return (Criteria) this;
        }

        public Criteria andModifierGreaterThanOrEqualTo(String value) {
            addCriterion("modifier >=", value, "modifier");
            return (Criteria) this;
        }

        public Criteria andModifierLessThan(String value) {
            addCriterion("modifier <", value, "modifier");
            return (Criteria) this;
        }

        public Criteria andModifierLessThanOrEqualTo(String value) {
            addCriterion("modifier <=", value, "modifier");
            return (Criteria) this;
        }

        public Criteria andModifierLike(String value) {
            addCriterion("modifier like", value, "modifier");
            return (Criteria) this;
        }

        public Criteria andModifierNotLike(String value) {
            addCriterion("modifier not like", value, "modifier");
            return (Criteria) this;
        }

        public Criteria andModifierIn(List<String> values) {
            addCriterion("modifier in", values, "modifier");
            return (Criteria) this;
        }

        public Criteria andModifierNotIn(List<String> values) {
            addCriterion("modifier not in", values, "modifier");
            return (Criteria) this;
        }

        public Criteria andModifierBetween(String value1, String value2) {
            addCriterion("modifier between", value1, value2, "modifier");
            return (Criteria) this;
        }

        public Criteria andModifierNotBetween(String value1, String value2) {
            addCriterion("modifier not between", value1, value2, "modifier");
            return (Criteria) this;
        }

        public Criteria andDeletedIdIsNull() {
            addCriterion("deleted_id is null");
            return (Criteria) this;
        }

        public Criteria andDeletedIdIsNotNull() {
            addCriterion("deleted_id is not null");
            return (Criteria) this;
        }

        public Criteria andDeletedIdEqualTo(Long value) {
            addCriterion("deleted_id =", value, "deletedId");
            return (Criteria) this;
        }

        public Criteria andDeletedIdNotEqualTo(Long value) {
            addCriterion("deleted_id <>", value, "deletedId");
            return (Criteria) this;
        }

        public Criteria andDeletedIdGreaterThan(Long value) {
            addCriterion("deleted_id >", value, "deletedId");
            return (Criteria) this;
        }

        public Criteria andDeletedIdGreaterThanOrEqualTo(Long value) {
            addCriterion("deleted_id >=", value, "deletedId");
            return (Criteria) this;
        }

        public Criteria andDeletedIdLessThan(Long value) {
            addCriterion("deleted_id <", value, "deletedId");
            return (Criteria) this;
        }

        public Criteria andDeletedIdLessThanOrEqualTo(Long value) {
            addCriterion("deleted_id <=", value, "deletedId");
            return (Criteria) this;
        }

        public Criteria andDeletedIdIn(List<Long> values) {
            addCriterion("deleted_id in", values, "deletedId");
            return (Criteria) this;
        }

        public Criteria andDeletedIdNotIn(List<Long> values) {
            addCriterion("deleted_id not in", values, "deletedId");
            return (Criteria) this;
        }

        public Criteria andDeletedIdBetween(Long value1, Long value2) {
            addCriterion("deleted_id between", value1, value2, "deletedId");
            return (Criteria) this;
        }

        public Criteria andDeletedIdNotBetween(Long value1, Long value2) {
            addCriterion("deleted_id not between", value1, value2, "deletedId");
            return (Criteria) this;
        }

        public Criteria andTenantIdIsNull() {
            addCriterion("tenant_id is null");
            return (Criteria) this;
        }

        public Criteria andTenantIdIsNotNull() {
            addCriterion("tenant_id is not null");
            return (Criteria) this;
        }

        public Criteria andTenantIdEqualTo(String value) {
            addCriterion("tenant_id =", value, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdNotEqualTo(String value) {
            addCriterion("tenant_id <>", value, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdGreaterThan(String value) {
            addCriterion("tenant_id >", value, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdGreaterThanOrEqualTo(String value) {
            addCriterion("tenant_id >=", value, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdLessThan(String value) {
            addCriterion("tenant_id <", value, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdLessThanOrEqualTo(String value) {
            addCriterion("tenant_id <=", value, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdLike(String value) {
            addCriterion("tenant_id like", value, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdNotLike(String value) {
            addCriterion("tenant_id not like", value, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdIn(List<String> values) {
            addCriterion("tenant_id in", values, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdNotIn(List<String> values) {
            addCriterion("tenant_id not in", values, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdBetween(String value1, String value2) {
            addCriterion("tenant_id between", value1, value2, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdNotBetween(String value1, String value2) {
            addCriterion("tenant_id not between", value1, value2, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTitleIsNull() {
            addCriterion("title is null");
            return (Criteria) this;
        }

        public Criteria andTitleIsNotNull() {
            addCriterion("title is not null");
            return (Criteria) this;
        }

        public Criteria andTitleEqualTo(String value) {
            addCriterion("title =", value, "title");
            return (Criteria) this;
        }

        public Criteria andTitleNotEqualTo(String value) {
            addCriterion("title <>", value, "title");
            return (Criteria) this;
        }

        public Criteria andTitleGreaterThan(String value) {
            addCriterion("title >", value, "title");
            return (Criteria) this;
        }

        public Criteria andTitleGreaterThanOrEqualTo(String value) {
            addCriterion("title >=", value, "title");
            return (Criteria) this;
        }

        public Criteria andTitleLessThan(String value) {
            addCriterion("title <", value, "title");
            return (Criteria) this;
        }

        public Criteria andTitleLessThanOrEqualTo(String value) {
            addCriterion("title <=", value, "title");
            return (Criteria) this;
        }

        public Criteria andTitleLike(String value) {
            addCriterion("title like", value, "title");
            return (Criteria) this;
        }

        public Criteria andTitleNotLike(String value) {
            addCriterion("title not like", value, "title");
            return (Criteria) this;
        }

        public Criteria andTitleIn(List<String> values) {
            addCriterion("title in", values, "title");
            return (Criteria) this;
        }

        public Criteria andTitleNotIn(List<String> values) {
            addCriterion("title not in", values, "title");
            return (Criteria) this;
        }

        public Criteria andTitleBetween(String value1, String value2) {
            addCriterion("title between", value1, value2, "title");
            return (Criteria) this;
        }

        public Criteria andTitleNotBetween(String value1, String value2) {
            addCriterion("title not between", value1, value2, "title");
            return (Criteria) this;
        }

        public Criteria andCoverUrlIsNull() {
            addCriterion("cover_url is null");
            return (Criteria) this;
        }

        public Criteria andCoverUrlIsNotNull() {
            addCriterion("cover_url is not null");
            return (Criteria) this;
        }

        public Criteria andCoverUrlEqualTo(String value) {
            addCriterion("cover_url =", value, "coverUrl");
            return (Criteria) this;
        }

        public Criteria andCoverUrlNotEqualTo(String value) {
            addCriterion("cover_url <>", value, "coverUrl");
            return (Criteria) this;
        }

        public Criteria andCoverUrlGreaterThan(String value) {
            addCriterion("cover_url >", value, "coverUrl");
            return (Criteria) this;
        }

        public Criteria andCoverUrlGreaterThanOrEqualTo(String value) {
            addCriterion("cover_url >=", value, "coverUrl");
            return (Criteria) this;
        }

        public Criteria andCoverUrlLessThan(String value) {
            addCriterion("cover_url <", value, "coverUrl");
            return (Criteria) this;
        }

        public Criteria andCoverUrlLessThanOrEqualTo(String value) {
            addCriterion("cover_url <=", value, "coverUrl");
            return (Criteria) this;
        }

        public Criteria andCoverUrlLike(String value) {
            addCriterion("cover_url like", value, "coverUrl");
            return (Criteria) this;
        }

        public Criteria andCoverUrlNotLike(String value) {
            addCriterion("cover_url not like", value, "coverUrl");
            return (Criteria) this;
        }

        public Criteria andCoverUrlIn(List<String> values) {
            addCriterion("cover_url in", values, "coverUrl");
            return (Criteria) this;
        }

        public Criteria andCoverUrlNotIn(List<String> values) {
            addCriterion("cover_url not in", values, "coverUrl");
            return (Criteria) this;
        }

        public Criteria andCoverUrlBetween(String value1, String value2) {
            addCriterion("cover_url between", value1, value2, "coverUrl");
            return (Criteria) this;
        }

        public Criteria andCoverUrlNotBetween(String value1, String value2) {
            addCriterion("cover_url not between", value1, value2, "coverUrl");
            return (Criteria) this;
        }

        public Criteria andAuthorIsNull() {
            addCriterion("author is null");
            return (Criteria) this;
        }

        public Criteria andAuthorIsNotNull() {
            addCriterion("author is not null");
            return (Criteria) this;
        }

        public Criteria andAuthorEqualTo(String value) {
            addCriterion("author =", value, "author");
            return (Criteria) this;
        }

        public Criteria andAuthorNotEqualTo(String value) {
            addCriterion("author <>", value, "author");
            return (Criteria) this;
        }

        public Criteria andAuthorGreaterThan(String value) {
            addCriterion("author >", value, "author");
            return (Criteria) this;
        }

        public Criteria andAuthorGreaterThanOrEqualTo(String value) {
            addCriterion("author >=", value, "author");
            return (Criteria) this;
        }

        public Criteria andAuthorLessThan(String value) {
            addCriterion("author <", value, "author");
            return (Criteria) this;
        }

        public Criteria andAuthorLessThanOrEqualTo(String value) {
            addCriterion("author <=", value, "author");
            return (Criteria) this;
        }

        public Criteria andAuthorLike(String value) {
            addCriterion("author like", value, "author");
            return (Criteria) this;
        }

        public Criteria andAuthorNotLike(String value) {
            addCriterion("author not like", value, "author");
            return (Criteria) this;
        }

        public Criteria andAuthorIn(List<String> values) {
            addCriterion("author in", values, "author");
            return (Criteria) this;
        }

        public Criteria andAuthorNotIn(List<String> values) {
            addCriterion("author not in", values, "author");
            return (Criteria) this;
        }

        public Criteria andAuthorBetween(String value1, String value2) {
            addCriterion("author between", value1, value2, "author");
            return (Criteria) this;
        }

        public Criteria andAuthorNotBetween(String value1, String value2) {
            addCriterion("author not between", value1, value2, "author");
            return (Criteria) this;
        }

        public Criteria andContentRichTextIdIsNull() {
            addCriterion("content_rich_text_id is null");
            return (Criteria) this;
        }

        public Criteria andContentRichTextIdIsNotNull() {
            addCriterion("content_rich_text_id is not null");
            return (Criteria) this;
        }

        public Criteria andContentRichTextIdEqualTo(Long value) {
            addCriterion("content_rich_text_id =", value, "contentRichTextId");
            return (Criteria) this;
        }

        public Criteria andContentRichTextIdNotEqualTo(Long value) {
            addCriterion("content_rich_text_id <>", value, "contentRichTextId");
            return (Criteria) this;
        }

        public Criteria andContentRichTextIdGreaterThan(Long value) {
            addCriterion("content_rich_text_id >", value, "contentRichTextId");
            return (Criteria) this;
        }

        public Criteria andContentRichTextIdGreaterThanOrEqualTo(Long value) {
            addCriterion("content_rich_text_id >=", value, "contentRichTextId");
            return (Criteria) this;
        }

        public Criteria andContentRichTextIdLessThan(Long value) {
            addCriterion("content_rich_text_id <", value, "contentRichTextId");
            return (Criteria) this;
        }

        public Criteria andContentRichTextIdLessThanOrEqualTo(Long value) {
            addCriterion("content_rich_text_id <=", value, "contentRichTextId");
            return (Criteria) this;
        }

        public Criteria andContentRichTextIdIn(List<Long> values) {
            addCriterion("content_rich_text_id in", values, "contentRichTextId");
            return (Criteria) this;
        }

        public Criteria andContentRichTextIdNotIn(List<Long> values) {
            addCriterion("content_rich_text_id not in", values, "contentRichTextId");
            return (Criteria) this;
        }

        public Criteria andContentRichTextIdBetween(Long value1, Long value2) {
            addCriterion("content_rich_text_id between", value1, value2, "contentRichTextId");
            return (Criteria) this;
        }

        public Criteria andContentRichTextIdNotBetween(Long value1, Long value2) {
            addCriterion("content_rich_text_id not between", value1, value2, "contentRichTextId");
            return (Criteria) this;
        }

        public Criteria andDescriptionIsNull() {
            addCriterion("description is null");
            return (Criteria) this;
        }

        public Criteria andDescriptionIsNotNull() {
            addCriterion("description is not null");
            return (Criteria) this;
        }

        public Criteria andDescriptionEqualTo(String value) {
            addCriterion("description =", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionNotEqualTo(String value) {
            addCriterion("description <>", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionGreaterThan(String value) {
            addCriterion("description >", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionGreaterThanOrEqualTo(String value) {
            addCriterion("description >=", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionLessThan(String value) {
            addCriterion("description <", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionLessThanOrEqualTo(String value) {
            addCriterion("description <=", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionLike(String value) {
            addCriterion("description like", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionNotLike(String value) {
            addCriterion("description not like", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionIn(List<String> values) {
            addCriterion("description in", values, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionNotIn(List<String> values) {
            addCriterion("description not in", values, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionBetween(String value1, String value2) {
            addCriterion("description between", value1, value2, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionNotBetween(String value1, String value2) {
            addCriterion("description not between", value1, value2, "description");
            return (Criteria) this;
        }

        public Criteria andTypeIsNull() {
            addCriterion("type is null");
            return (Criteria) this;
        }

        public Criteria andTypeIsNotNull() {
            addCriterion("type is not null");
            return (Criteria) this;
        }

        public Criteria andTypeEqualTo(String value) {
            addCriterion("type =", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotEqualTo(String value) {
            addCriterion("type <>", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeGreaterThan(String value) {
            addCriterion("type >", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeGreaterThanOrEqualTo(String value) {
            addCriterion("type >=", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeLessThan(String value) {
            addCriterion("type <", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeLessThanOrEqualTo(String value) {
            addCriterion("type <=", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeLike(String value) {
            addCriterion("type like", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotLike(String value) {
            addCriterion("type not like", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeIn(List<String> values) {
            addCriterion("type in", values, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotIn(List<String> values) {
            addCriterion("type not in", values, "type");
            return (Criteria) this;
        }

        public Criteria andTypeBetween(String value1, String value2) {
            addCriterion("type between", value1, value2, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotBetween(String value1, String value2) {
            addCriterion("type not between", value1, value2, "type");
            return (Criteria) this;
        }

        public Criteria andArticleIdIsNull() {
            addCriterion("article_id is null");
            return (Criteria) this;
        }

        public Criteria andArticleIdIsNotNull() {
            addCriterion("article_id is not null");
            return (Criteria) this;
        }

        public Criteria andArticleIdEqualTo(Long value) {
            addCriterion("article_id =", value, "articleId");
            return (Criteria) this;
        }

        public Criteria andArticleIdNotEqualTo(Long value) {
            addCriterion("article_id <>", value, "articleId");
            return (Criteria) this;
        }

        public Criteria andArticleIdGreaterThan(Long value) {
            addCriterion("article_id >", value, "articleId");
            return (Criteria) this;
        }

        public Criteria andArticleIdGreaterThanOrEqualTo(Long value) {
            addCriterion("article_id >=", value, "articleId");
            return (Criteria) this;
        }

        public Criteria andArticleIdLessThan(Long value) {
            addCriterion("article_id <", value, "articleId");
            return (Criteria) this;
        }

        public Criteria andArticleIdLessThanOrEqualTo(Long value) {
            addCriterion("article_id <=", value, "articleId");
            return (Criteria) this;
        }

        public Criteria andArticleIdIn(List<Long> values) {
            addCriterion("article_id in", values, "articleId");
            return (Criteria) this;
        }

        public Criteria andArticleIdNotIn(List<Long> values) {
            addCriterion("article_id not in", values, "articleId");
            return (Criteria) this;
        }

        public Criteria andArticleIdBetween(Long value1, Long value2) {
            addCriterion("article_id between", value1, value2, "articleId");
            return (Criteria) this;
        }

        public Criteria andArticleIdNotBetween(Long value1, Long value2) {
            addCriterion("article_id not between", value1, value2, "articleId");
            return (Criteria) this;
        }

        public Criteria andActivatedIsNull() {
            addCriterion("activated is null");
            return (Criteria) this;
        }

        public Criteria andActivatedIsNotNull() {
            addCriterion("activated is not null");
            return (Criteria) this;
        }

        public Criteria andActivatedEqualTo(String value) {
            addCriterion("activated =", value, "activated");
            return (Criteria) this;
        }

        public Criteria andActivatedNotEqualTo(String value) {
            addCriterion("activated <>", value, "activated");
            return (Criteria) this;
        }

        public Criteria andActivatedGreaterThan(String value) {
            addCriterion("activated >", value, "activated");
            return (Criteria) this;
        }

        public Criteria andActivatedGreaterThanOrEqualTo(String value) {
            addCriterion("activated >=", value, "activated");
            return (Criteria) this;
        }

        public Criteria andActivatedLessThan(String value) {
            addCriterion("activated <", value, "activated");
            return (Criteria) this;
        }

        public Criteria andActivatedLessThanOrEqualTo(String value) {
            addCriterion("activated <=", value, "activated");
            return (Criteria) this;
        }

        public Criteria andActivatedLike(String value) {
            addCriterion("activated like", value, "activated");
            return (Criteria) this;
        }

        public Criteria andActivatedNotLike(String value) {
            addCriterion("activated not like", value, "activated");
            return (Criteria) this;
        }

        public Criteria andActivatedIn(List<String> values) {
            addCriterion("activated in", values, "activated");
            return (Criteria) this;
        }

        public Criteria andActivatedNotIn(List<String> values) {
            addCriterion("activated not in", values, "activated");
            return (Criteria) this;
        }

        public Criteria andActivatedBetween(String value1, String value2) {
            addCriterion("activated between", value1, value2, "activated");
            return (Criteria) this;
        }

        public Criteria andActivatedNotBetween(String value1, String value2) {
            addCriterion("activated not between", value1, value2, "activated");
            return (Criteria) this;
        }

        public Criteria andIdEqualToWhenPresent(Long value) {
            if(value != null) {
                addCriterion("id =", value, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdNotEqualToWhenPresent(Long value) {
            if(value != null) {
                addCriterion("id <>", value, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanWhenPresent(Long value) {
            if(value != null) {
                addCriterion("id >", value, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualToWhenPresent(Long value) {
            if(value != null) {
                addCriterion("id >=", value, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdLessThanWhenPresent(Long value) {
            if(value != null) {
                addCriterion("id <", value, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualToWhenPresent(Long value) {
            if(value != null) {
                addCriterion("id <=", value, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdInWhenPresent(List<Long> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("id in", values, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdNotInWhenPresent(List<Long> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("id not in", values, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdBetweenWhenPresent(Long value1, Long value2) {
            if(value1 != null && value2 != null){
                addCriterion("id between", value1, value2, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdNotBetweenWhenPresent(Long value1, Long value2) {
            if(value1 != null && value2 != null){
                addCriterion("id not between", value1, value2, "id");
            }
            return (Criteria) this;
        }

        public Criteria andGmtCreateEqualToWhenPresent(Date value) {
            if(value != null) {
                addCriterion("gmt_create =", value, "gmtCreate");
            }
            return (Criteria) this;
        }

        public Criteria andGmtCreateNotEqualToWhenPresent(Date value) {
            if(value != null) {
                addCriterion("gmt_create <>", value, "gmtCreate");
            }
            return (Criteria) this;
        }

        public Criteria andGmtCreateGreaterThanWhenPresent(Date value) {
            if(value != null) {
                addCriterion("gmt_create >", value, "gmtCreate");
            }
            return (Criteria) this;
        }

        public Criteria andGmtCreateGreaterThanOrEqualToWhenPresent(Date value) {
            if(value != null) {
                addCriterion("gmt_create >=", value, "gmtCreate");
            }
            return (Criteria) this;
        }

        public Criteria andGmtCreateLessThanWhenPresent(Date value) {
            if(value != null) {
                addCriterion("gmt_create <", value, "gmtCreate");
            }
            return (Criteria) this;
        }

        public Criteria andGmtCreateLessThanOrEqualToWhenPresent(Date value) {
            if(value != null) {
                addCriterion("gmt_create <=", value, "gmtCreate");
            }
            return (Criteria) this;
        }

        public Criteria andGmtCreateInWhenPresent(List<Date> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("gmt_create in", values, "gmtCreate");
            }
            return (Criteria) this;
        }

        public Criteria andGmtCreateNotInWhenPresent(List<Date> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("gmt_create not in", values, "gmtCreate");
            }
            return (Criteria) this;
        }

        public Criteria andGmtCreateBetweenWhenPresent(Date value1, Date value2) {
            if(value1 != null && value2 != null){
                addCriterion("gmt_create between", value1, value2, "gmtCreate");
            }
            return (Criteria) this;
        }

        public Criteria andGmtCreateNotBetweenWhenPresent(Date value1, Date value2) {
            if(value1 != null && value2 != null){
                addCriterion("gmt_create not between", value1, value2, "gmtCreate");
            }
            return (Criteria) this;
        }

        public Criteria andGmtModifiedEqualToWhenPresent(Date value) {
            if(value != null) {
                addCriterion("gmt_modified =", value, "gmtModified");
            }
            return (Criteria) this;
        }

        public Criteria andGmtModifiedNotEqualToWhenPresent(Date value) {
            if(value != null) {
                addCriterion("gmt_modified <>", value, "gmtModified");
            }
            return (Criteria) this;
        }

        public Criteria andGmtModifiedGreaterThanWhenPresent(Date value) {
            if(value != null) {
                addCriterion("gmt_modified >", value, "gmtModified");
            }
            return (Criteria) this;
        }

        public Criteria andGmtModifiedGreaterThanOrEqualToWhenPresent(Date value) {
            if(value != null) {
                addCriterion("gmt_modified >=", value, "gmtModified");
            }
            return (Criteria) this;
        }

        public Criteria andGmtModifiedLessThanWhenPresent(Date value) {
            if(value != null) {
                addCriterion("gmt_modified <", value, "gmtModified");
            }
            return (Criteria) this;
        }

        public Criteria andGmtModifiedLessThanOrEqualToWhenPresent(Date value) {
            if(value != null) {
                addCriterion("gmt_modified <=", value, "gmtModified");
            }
            return (Criteria) this;
        }

        public Criteria andGmtModifiedInWhenPresent(List<Date> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("gmt_modified in", values, "gmtModified");
            }
            return (Criteria) this;
        }

        public Criteria andGmtModifiedNotInWhenPresent(List<Date> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("gmt_modified not in", values, "gmtModified");
            }
            return (Criteria) this;
        }

        public Criteria andGmtModifiedBetweenWhenPresent(Date value1, Date value2) {
            if(value1 != null && value2 != null){
                addCriterion("gmt_modified between", value1, value2, "gmtModified");
            }
            return (Criteria) this;
        }

        public Criteria andGmtModifiedNotBetweenWhenPresent(Date value1, Date value2) {
            if(value1 != null && value2 != null){
                addCriterion("gmt_modified not between", value1, value2, "gmtModified");
            }
            return (Criteria) this;
        }

        public Criteria andCreatorEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("creator =", value, "creator");
            }
            return (Criteria) this;
        }

        public Criteria andCreatorNotEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("creator <>", value, "creator");
            }
            return (Criteria) this;
        }

        public Criteria andCreatorGreaterThanWhenPresent(String value) {
            if(value != null) {
                addCriterion("creator >", value, "creator");
            }
            return (Criteria) this;
        }

        public Criteria andCreatorGreaterThanOrEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("creator >=", value, "creator");
            }
            return (Criteria) this;
        }

        public Criteria andCreatorLessThanWhenPresent(String value) {
            if(value != null) {
                addCriterion("creator <", value, "creator");
            }
            return (Criteria) this;
        }

        public Criteria andCreatorLessThanOrEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("creator <=", value, "creator");
            }
            return (Criteria) this;
        }

        public Criteria andCreatorLikeWhenPresent(String value) {
            if(value != null) {
                addCriterion("creator like", value, "creator");
            }
            return (Criteria) this;
        }

        public Criteria andCreatorNotLikeWhenPresent(String value) {
            if(value != null) {
                addCriterion("creator not like", value, "creator");
            }
            return (Criteria) this;
        }

        public Criteria andCreatorInWhenPresent(List<String> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("creator in", values, "creator");
            }
            return (Criteria) this;
        }

        public Criteria andCreatorNotInWhenPresent(List<String> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("creator not in", values, "creator");
            }
            return (Criteria) this;
        }

        public Criteria andCreatorBetweenWhenPresent(String value1, String value2) {
            if(value1 != null && value2 != null){
                addCriterion("creator between", value1, value2, "creator");
            }
            return (Criteria) this;
        }

        public Criteria andCreatorNotBetweenWhenPresent(String value1, String value2) {
            if(value1 != null && value2 != null){
                addCriterion("creator not between", value1, value2, "creator");
            }
            return (Criteria) this;
        }

        public Criteria andModifierEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("modifier =", value, "modifier");
            }
            return (Criteria) this;
        }

        public Criteria andModifierNotEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("modifier <>", value, "modifier");
            }
            return (Criteria) this;
        }

        public Criteria andModifierGreaterThanWhenPresent(String value) {
            if(value != null) {
                addCriterion("modifier >", value, "modifier");
            }
            return (Criteria) this;
        }

        public Criteria andModifierGreaterThanOrEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("modifier >=", value, "modifier");
            }
            return (Criteria) this;
        }

        public Criteria andModifierLessThanWhenPresent(String value) {
            if(value != null) {
                addCriterion("modifier <", value, "modifier");
            }
            return (Criteria) this;
        }

        public Criteria andModifierLessThanOrEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("modifier <=", value, "modifier");
            }
            return (Criteria) this;
        }

        public Criteria andModifierLikeWhenPresent(String value) {
            if(value != null) {
                addCriterion("modifier like", value, "modifier");
            }
            return (Criteria) this;
        }

        public Criteria andModifierNotLikeWhenPresent(String value) {
            if(value != null) {
                addCriterion("modifier not like", value, "modifier");
            }
            return (Criteria) this;
        }

        public Criteria andModifierInWhenPresent(List<String> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("modifier in", values, "modifier");
            }
            return (Criteria) this;
        }

        public Criteria andModifierNotInWhenPresent(List<String> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("modifier not in", values, "modifier");
            }
            return (Criteria) this;
        }

        public Criteria andModifierBetweenWhenPresent(String value1, String value2) {
            if(value1 != null && value2 != null){
                addCriterion("modifier between", value1, value2, "modifier");
            }
            return (Criteria) this;
        }

        public Criteria andModifierNotBetweenWhenPresent(String value1, String value2) {
            if(value1 != null && value2 != null){
                addCriterion("modifier not between", value1, value2, "modifier");
            }
            return (Criteria) this;
        }

        public Criteria andDeletedIdEqualToWhenPresent(Long value) {
            if(value != null) {
                addCriterion("deleted_id =", value, "deletedId");
            }
            return (Criteria) this;
        }

        public Criteria andDeletedIdNotEqualToWhenPresent(Long value) {
            if(value != null) {
                addCriterion("deleted_id <>", value, "deletedId");
            }
            return (Criteria) this;
        }

        public Criteria andDeletedIdGreaterThanWhenPresent(Long value) {
            if(value != null) {
                addCriterion("deleted_id >", value, "deletedId");
            }
            return (Criteria) this;
        }

        public Criteria andDeletedIdGreaterThanOrEqualToWhenPresent(Long value) {
            if(value != null) {
                addCriterion("deleted_id >=", value, "deletedId");
            }
            return (Criteria) this;
        }

        public Criteria andDeletedIdLessThanWhenPresent(Long value) {
            if(value != null) {
                addCriterion("deleted_id <", value, "deletedId");
            }
            return (Criteria) this;
        }

        public Criteria andDeletedIdLessThanOrEqualToWhenPresent(Long value) {
            if(value != null) {
                addCriterion("deleted_id <=", value, "deletedId");
            }
            return (Criteria) this;
        }

        public Criteria andDeletedIdInWhenPresent(List<Long> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("deleted_id in", values, "deletedId");
            }
            return (Criteria) this;
        }

        public Criteria andDeletedIdNotInWhenPresent(List<Long> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("deleted_id not in", values, "deletedId");
            }
            return (Criteria) this;
        }

        public Criteria andDeletedIdBetweenWhenPresent(Long value1, Long value2) {
            if(value1 != null && value2 != null){
                addCriterion("deleted_id between", value1, value2, "deletedId");
            }
            return (Criteria) this;
        }

        public Criteria andDeletedIdNotBetweenWhenPresent(Long value1, Long value2) {
            if(value1 != null && value2 != null){
                addCriterion("deleted_id not between", value1, value2, "deletedId");
            }
            return (Criteria) this;
        }

        public Criteria andTenantIdEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("tenant_id =", value, "tenantId");
            }
            return (Criteria) this;
        }

        public Criteria andTenantIdNotEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("tenant_id <>", value, "tenantId");
            }
            return (Criteria) this;
        }

        public Criteria andTenantIdGreaterThanWhenPresent(String value) {
            if(value != null) {
                addCriterion("tenant_id >", value, "tenantId");
            }
            return (Criteria) this;
        }

        public Criteria andTenantIdGreaterThanOrEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("tenant_id >=", value, "tenantId");
            }
            return (Criteria) this;
        }

        public Criteria andTenantIdLessThanWhenPresent(String value) {
            if(value != null) {
                addCriterion("tenant_id <", value, "tenantId");
            }
            return (Criteria) this;
        }

        public Criteria andTenantIdLessThanOrEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("tenant_id <=", value, "tenantId");
            }
            return (Criteria) this;
        }

        public Criteria andTenantIdLikeWhenPresent(String value) {
            if(value != null) {
                addCriterion("tenant_id like", value, "tenantId");
            }
            return (Criteria) this;
        }

        public Criteria andTenantIdNotLikeWhenPresent(String value) {
            if(value != null) {
                addCriterion("tenant_id not like", value, "tenantId");
            }
            return (Criteria) this;
        }

        public Criteria andTenantIdInWhenPresent(List<String> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("tenant_id in", values, "tenantId");
            }
            return (Criteria) this;
        }

        public Criteria andTenantIdNotInWhenPresent(List<String> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("tenant_id not in", values, "tenantId");
            }
            return (Criteria) this;
        }

        public Criteria andTenantIdBetweenWhenPresent(String value1, String value2) {
            if(value1 != null && value2 != null){
                addCriterion("tenant_id between", value1, value2, "tenantId");
            }
            return (Criteria) this;
        }

        public Criteria andTenantIdNotBetweenWhenPresent(String value1, String value2) {
            if(value1 != null && value2 != null){
                addCriterion("tenant_id not between", value1, value2, "tenantId");
            }
            return (Criteria) this;
        }

        public Criteria andTitleEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("title =", value, "title");
            }
            return (Criteria) this;
        }

        public Criteria andTitleNotEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("title <>", value, "title");
            }
            return (Criteria) this;
        }

        public Criteria andTitleGreaterThanWhenPresent(String value) {
            if(value != null) {
                addCriterion("title >", value, "title");
            }
            return (Criteria) this;
        }

        public Criteria andTitleGreaterThanOrEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("title >=", value, "title");
            }
            return (Criteria) this;
        }

        public Criteria andTitleLessThanWhenPresent(String value) {
            if(value != null) {
                addCriterion("title <", value, "title");
            }
            return (Criteria) this;
        }

        public Criteria andTitleLessThanOrEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("title <=", value, "title");
            }
            return (Criteria) this;
        }

        public Criteria andTitleLikeWhenPresent(String value) {
            if(value != null) {
                addCriterion("title like", value, "title");
            }
            return (Criteria) this;
        }

        public Criteria andTitleNotLikeWhenPresent(String value) {
            if(value != null) {
                addCriterion("title not like", value, "title");
            }
            return (Criteria) this;
        }

        public Criteria andTitleInWhenPresent(List<String> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("title in", values, "title");
            }
            return (Criteria) this;
        }

        public Criteria andTitleNotInWhenPresent(List<String> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("title not in", values, "title");
            }
            return (Criteria) this;
        }

        public Criteria andTitleBetweenWhenPresent(String value1, String value2) {
            if(value1 != null && value2 != null){
                addCriterion("title between", value1, value2, "title");
            }
            return (Criteria) this;
        }

        public Criteria andTitleNotBetweenWhenPresent(String value1, String value2) {
            if(value1 != null && value2 != null){
                addCriterion("title not between", value1, value2, "title");
            }
            return (Criteria) this;
        }

        public Criteria andCoverUrlEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("cover_url =", value, "coverUrl");
            }
            return (Criteria) this;
        }

        public Criteria andCoverUrlNotEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("cover_url <>", value, "coverUrl");
            }
            return (Criteria) this;
        }

        public Criteria andCoverUrlGreaterThanWhenPresent(String value) {
            if(value != null) {
                addCriterion("cover_url >", value, "coverUrl");
            }
            return (Criteria) this;
        }

        public Criteria andCoverUrlGreaterThanOrEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("cover_url >=", value, "coverUrl");
            }
            return (Criteria) this;
        }

        public Criteria andCoverUrlLessThanWhenPresent(String value) {
            if(value != null) {
                addCriterion("cover_url <", value, "coverUrl");
            }
            return (Criteria) this;
        }

        public Criteria andCoverUrlLessThanOrEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("cover_url <=", value, "coverUrl");
            }
            return (Criteria) this;
        }

        public Criteria andCoverUrlLikeWhenPresent(String value) {
            if(value != null) {
                addCriterion("cover_url like", value, "coverUrl");
            }
            return (Criteria) this;
        }

        public Criteria andCoverUrlNotLikeWhenPresent(String value) {
            if(value != null) {
                addCriterion("cover_url not like", value, "coverUrl");
            }
            return (Criteria) this;
        }

        public Criteria andCoverUrlInWhenPresent(List<String> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("cover_url in", values, "coverUrl");
            }
            return (Criteria) this;
        }

        public Criteria andCoverUrlNotInWhenPresent(List<String> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("cover_url not in", values, "coverUrl");
            }
            return (Criteria) this;
        }

        public Criteria andCoverUrlBetweenWhenPresent(String value1, String value2) {
            if(value1 != null && value2 != null){
                addCriterion("cover_url between", value1, value2, "coverUrl");
            }
            return (Criteria) this;
        }

        public Criteria andCoverUrlNotBetweenWhenPresent(String value1, String value2) {
            if(value1 != null && value2 != null){
                addCriterion("cover_url not between", value1, value2, "coverUrl");
            }
            return (Criteria) this;
        }

        public Criteria andAuthorEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("author =", value, "author");
            }
            return (Criteria) this;
        }

        public Criteria andAuthorNotEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("author <>", value, "author");
            }
            return (Criteria) this;
        }

        public Criteria andAuthorGreaterThanWhenPresent(String value) {
            if(value != null) {
                addCriterion("author >", value, "author");
            }
            return (Criteria) this;
        }

        public Criteria andAuthorGreaterThanOrEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("author >=", value, "author");
            }
            return (Criteria) this;
        }

        public Criteria andAuthorLessThanWhenPresent(String value) {
            if(value != null) {
                addCriterion("author <", value, "author");
            }
            return (Criteria) this;
        }

        public Criteria andAuthorLessThanOrEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("author <=", value, "author");
            }
            return (Criteria) this;
        }

        public Criteria andAuthorLikeWhenPresent(String value) {
            if(value != null) {
                addCriterion("author like", value, "author");
            }
            return (Criteria) this;
        }

        public Criteria andAuthorNotLikeWhenPresent(String value) {
            if(value != null) {
                addCriterion("author not like", value, "author");
            }
            return (Criteria) this;
        }

        public Criteria andAuthorInWhenPresent(List<String> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("author in", values, "author");
            }
            return (Criteria) this;
        }

        public Criteria andAuthorNotInWhenPresent(List<String> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("author not in", values, "author");
            }
            return (Criteria) this;
        }

        public Criteria andAuthorBetweenWhenPresent(String value1, String value2) {
            if(value1 != null && value2 != null){
                addCriterion("author between", value1, value2, "author");
            }
            return (Criteria) this;
        }

        public Criteria andAuthorNotBetweenWhenPresent(String value1, String value2) {
            if(value1 != null && value2 != null){
                addCriterion("author not between", value1, value2, "author");
            }
            return (Criteria) this;
        }

        public Criteria andContentRichTextIdEqualToWhenPresent(Long value) {
            if(value != null) {
                addCriterion("content_rich_text_id =", value, "contentRichTextId");
            }
            return (Criteria) this;
        }

        public Criteria andContentRichTextIdNotEqualToWhenPresent(Long value) {
            if(value != null) {
                addCriterion("content_rich_text_id <>", value, "contentRichTextId");
            }
            return (Criteria) this;
        }

        public Criteria andContentRichTextIdGreaterThanWhenPresent(Long value) {
            if(value != null) {
                addCriterion("content_rich_text_id >", value, "contentRichTextId");
            }
            return (Criteria) this;
        }

        public Criteria andContentRichTextIdGreaterThanOrEqualToWhenPresent(Long value) {
            if(value != null) {
                addCriterion("content_rich_text_id >=", value, "contentRichTextId");
            }
            return (Criteria) this;
        }

        public Criteria andContentRichTextIdLessThanWhenPresent(Long value) {
            if(value != null) {
                addCriterion("content_rich_text_id <", value, "contentRichTextId");
            }
            return (Criteria) this;
        }

        public Criteria andContentRichTextIdLessThanOrEqualToWhenPresent(Long value) {
            if(value != null) {
                addCriterion("content_rich_text_id <=", value, "contentRichTextId");
            }
            return (Criteria) this;
        }

        public Criteria andContentRichTextIdInWhenPresent(List<Long> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("content_rich_text_id in", values, "contentRichTextId");
            }
            return (Criteria) this;
        }

        public Criteria andContentRichTextIdNotInWhenPresent(List<Long> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("content_rich_text_id not in", values, "contentRichTextId");
            }
            return (Criteria) this;
        }

        public Criteria andContentRichTextIdBetweenWhenPresent(Long value1, Long value2) {
            if(value1 != null && value2 != null){
                addCriterion("content_rich_text_id between", value1, value2, "contentRichTextId");
            }
            return (Criteria) this;
        }

        public Criteria andContentRichTextIdNotBetweenWhenPresent(Long value1, Long value2) {
            if(value1 != null && value2 != null){
                addCriterion("content_rich_text_id not between", value1, value2, "contentRichTextId");
            }
            return (Criteria) this;
        }

        public Criteria andDescriptionEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("description =", value, "description");
            }
            return (Criteria) this;
        }

        public Criteria andDescriptionNotEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("description <>", value, "description");
            }
            return (Criteria) this;
        }

        public Criteria andDescriptionGreaterThanWhenPresent(String value) {
            if(value != null) {
                addCriterion("description >", value, "description");
            }
            return (Criteria) this;
        }

        public Criteria andDescriptionGreaterThanOrEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("description >=", value, "description");
            }
            return (Criteria) this;
        }

        public Criteria andDescriptionLessThanWhenPresent(String value) {
            if(value != null) {
                addCriterion("description <", value, "description");
            }
            return (Criteria) this;
        }

        public Criteria andDescriptionLessThanOrEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("description <=", value, "description");
            }
            return (Criteria) this;
        }

        public Criteria andDescriptionLikeWhenPresent(String value) {
            if(value != null) {
                addCriterion("description like", value, "description");
            }
            return (Criteria) this;
        }

        public Criteria andDescriptionNotLikeWhenPresent(String value) {
            if(value != null) {
                addCriterion("description not like", value, "description");
            }
            return (Criteria) this;
        }

        public Criteria andDescriptionInWhenPresent(List<String> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("description in", values, "description");
            }
            return (Criteria) this;
        }

        public Criteria andDescriptionNotInWhenPresent(List<String> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("description not in", values, "description");
            }
            return (Criteria) this;
        }

        public Criteria andDescriptionBetweenWhenPresent(String value1, String value2) {
            if(value1 != null && value2 != null){
                addCriterion("description between", value1, value2, "description");
            }
            return (Criteria) this;
        }

        public Criteria andDescriptionNotBetweenWhenPresent(String value1, String value2) {
            if(value1 != null && value2 != null){
                addCriterion("description not between", value1, value2, "description");
            }
            return (Criteria) this;
        }

        public Criteria andTypeEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("type =", value, "type");
            }
            return (Criteria) this;
        }

        public Criteria andTypeNotEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("type <>", value, "type");
            }
            return (Criteria) this;
        }

        public Criteria andTypeGreaterThanWhenPresent(String value) {
            if(value != null) {
                addCriterion("type >", value, "type");
            }
            return (Criteria) this;
        }

        public Criteria andTypeGreaterThanOrEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("type >=", value, "type");
            }
            return (Criteria) this;
        }

        public Criteria andTypeLessThanWhenPresent(String value) {
            if(value != null) {
                addCriterion("type <", value, "type");
            }
            return (Criteria) this;
        }

        public Criteria andTypeLessThanOrEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("type <=", value, "type");
            }
            return (Criteria) this;
        }

        public Criteria andTypeLikeWhenPresent(String value) {
            if(value != null) {
                addCriterion("type like", value, "type");
            }
            return (Criteria) this;
        }

        public Criteria andTypeNotLikeWhenPresent(String value) {
            if(value != null) {
                addCriterion("type not like", value, "type");
            }
            return (Criteria) this;
        }

        public Criteria andTypeInWhenPresent(List<String> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("type in", values, "type");
            }
            return (Criteria) this;
        }

        public Criteria andTypeNotInWhenPresent(List<String> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("type not in", values, "type");
            }
            return (Criteria) this;
        }

        public Criteria andTypeBetweenWhenPresent(String value1, String value2) {
            if(value1 != null && value2 != null){
                addCriterion("type between", value1, value2, "type");
            }
            return (Criteria) this;
        }

        public Criteria andTypeNotBetweenWhenPresent(String value1, String value2) {
            if(value1 != null && value2 != null){
                addCriterion("type not between", value1, value2, "type");
            }
            return (Criteria) this;
        }

        public Criteria andArticleIdEqualToWhenPresent(Long value) {
            if(value != null) {
                addCriterion("article_id =", value, "articleId");
            }
            return (Criteria) this;
        }

        public Criteria andArticleIdNotEqualToWhenPresent(Long value) {
            if(value != null) {
                addCriterion("article_id <>", value, "articleId");
            }
            return (Criteria) this;
        }

        public Criteria andArticleIdGreaterThanWhenPresent(Long value) {
            if(value != null) {
                addCriterion("article_id >", value, "articleId");
            }
            return (Criteria) this;
        }

        public Criteria andArticleIdGreaterThanOrEqualToWhenPresent(Long value) {
            if(value != null) {
                addCriterion("article_id >=", value, "articleId");
            }
            return (Criteria) this;
        }

        public Criteria andArticleIdLessThanWhenPresent(Long value) {
            if(value != null) {
                addCriterion("article_id <", value, "articleId");
            }
            return (Criteria) this;
        }

        public Criteria andArticleIdLessThanOrEqualToWhenPresent(Long value) {
            if(value != null) {
                addCriterion("article_id <=", value, "articleId");
            }
            return (Criteria) this;
        }

        public Criteria andArticleIdInWhenPresent(List<Long> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("article_id in", values, "articleId");
            }
            return (Criteria) this;
        }

        public Criteria andArticleIdNotInWhenPresent(List<Long> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("article_id not in", values, "articleId");
            }
            return (Criteria) this;
        }

        public Criteria andArticleIdBetweenWhenPresent(Long value1, Long value2) {
            if(value1 != null && value2 != null){
                addCriterion("article_id between", value1, value2, "articleId");
            }
            return (Criteria) this;
        }

        public Criteria andArticleIdNotBetweenWhenPresent(Long value1, Long value2) {
            if(value1 != null && value2 != null){
                addCriterion("article_id not between", value1, value2, "articleId");
            }
            return (Criteria) this;
        }

        public Criteria andActivatedEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("activated =", value, "activated");
            }
            return (Criteria) this;
        }

        public Criteria andActivatedNotEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("activated <>", value, "activated");
            }
            return (Criteria) this;
        }

        public Criteria andActivatedGreaterThanWhenPresent(String value) {
            if(value != null) {
                addCriterion("activated >", value, "activated");
            }
            return (Criteria) this;
        }

        public Criteria andActivatedGreaterThanOrEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("activated >=", value, "activated");
            }
            return (Criteria) this;
        }

        public Criteria andActivatedLessThanWhenPresent(String value) {
            if(value != null) {
                addCriterion("activated <", value, "activated");
            }
            return (Criteria) this;
        }

        public Criteria andActivatedLessThanOrEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("activated <=", value, "activated");
            }
            return (Criteria) this;
        }

        public Criteria andActivatedLikeWhenPresent(String value) {
            if(value != null) {
                addCriterion("activated like", value, "activated");
            }
            return (Criteria) this;
        }

        public Criteria andActivatedNotLikeWhenPresent(String value) {
            if(value != null) {
                addCriterion("activated not like", value, "activated");
            }
            return (Criteria) this;
        }

        public Criteria andActivatedInWhenPresent(List<String> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("activated in", values, "activated");
            }
            return (Criteria) this;
        }

        public Criteria andActivatedNotInWhenPresent(List<String> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("activated not in", values, "activated");
            }
            return (Criteria) this;
        }

        public Criteria andActivatedBetweenWhenPresent(String value1, String value2) {
            if(value1 != null && value2 != null){
                addCriterion("activated between", value1, value2, "activated");
            }
            return (Criteria) this;
        }

        public Criteria andActivatedNotBetweenWhenPresent(String value1, String value2) {
            if(value1 != null && value2 != null){
                addCriterion("activated not between", value1, value2, "activated");
            }
            return (Criteria) this;
        }
    }

    /**
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends AbstractGeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    /**
     *
     * @mbg.generated
     */
    public enum OrderCondition {
        /**
         *主键
         */
        ID("id"),
        /**
         *创建时间
         */
        GMTCREATE("gmt_create"),
        /**
         *修改时间
         */
        GMTMODIFIED("gmt_modified"),
        /**
         *创建人
         */
        CREATOR("creator"),
        /**
         *修改人
         */
        MODIFIER("modifier"),
        /**
         *逻辑删除标志 删除的时候 将当前字段设置成id，0 - 有效  其他有效
         */
        DELETEDID("deleted_id"),
        /**
         *租户id
         */
        TENANTID("tenant_id"),
        /**
         *标题
         */
        TITLE("title"),
        /**
         *封面url
         */
        COVERURL("cover_url"),
        /**
         *作者
         */
        AUTHOR("author"),
        /**
         *内容富文本id
         */
        CONTENTRICHTEXTID("content_rich_text_id"),
        /**
         *文章摘要
         */
        DESCRIPTION("description"),
        /**
         *文章类型
         */
        TYPE("type"),
        /**
         *文章id
         */
        ARTICLEID("article_id"),
        /**
         *是否激活
         */
        ACTIVATED("activated");

        private String columnName;

        OrderCondition(String columnName) {
            this.columnName = columnName;
        }

        public String getColumnName() {
            return columnName;
        }

        public static OrderCondition getEnumByName(String name) {
            OrderCondition[] orderConditions = OrderCondition.values();
            for (OrderCondition orderCondition : orderConditions) {
                if (orderCondition.name().equalsIgnoreCase(name)) {
                    return orderCondition;
                }
            }
            throw new RuntimeException("OrderCondition of " + name + " enum not exist");
        }

        @Override
        public String toString() {
            return columnName;
        }
    }

    /**
     *
     * @mbg.generated
     */
    public enum SortType {
        /**
         * 升序
         */
        ASC("asc"),
        /**
         * 降序
         */
        DESC("desc");

        private String value;

        SortType(String value) {
            this.value = value;
        }

        public String getValue() {
            return value;
        }

        public static SortType getEnumByName(String name) {
            SortType[] sortTypes = SortType.values();
            for (SortType sortType : sortTypes) {
                if (sortType.name().equalsIgnoreCase(name)) {
                    return sortType;
                }
            }
            throw new RuntimeException("SortType of " + name + " enum not exist");
        }

        @Override
        public String toString() {
            return value;
        }
    }
}