package com.alibaba.ctoo.opensource.domain.repository.mapper;

import com.alibaba.ctoo.opensource.domain.repository.dataobject.RichTextDO;
import com.alibaba.ctoo.opensource.domain.repository.dataobject.RichTextParam;
import java.util.List;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;

/**
 * This class was generated by Ali-Generator
 * @author zhuangjiaju
 */
@Mapper
public interface RichTextMapper {
    /**
     * 根据WHERE条件COUNT
     * @param richTextParam
     * @return
     *
     * @mbg.generated
     */
    long countByParam(RichTextParam richTextParam);

    /**
     * 插入单条记录
     * @param record
     * @return
     *
     * @mbg.generated
     */
    int insert(RichTextDO record);

    /**
     * 根据字段选择性插入单条记录
     * @param record
     * @return
     *
     * @mbg.generated
     */
    int insertSelective(RichTextDO record);

    /**
     * 根据WHERE条件查询，返回包含长文本字段
     * @param richTextParam
     * @return
     *
     * @mbg.generated
     */
    List<RichTextDO> selectByParamWithBLOBs(RichTextParam richTextParam);

    /**
     * 根据WHERE条件查询，返回不包含长文本字段
     * @param richTextParam
     * @return
     *
     * @mbg.generated
     */
    List<RichTextDO> selectByParam(RichTextParam richTextParam);

    /**
     * 根据主键查询
     * @param id
     * @return
     *
     * @mbg.generated
     */
    RichTextDO selectByPrimaryKey(Long id);

    /**
     * 根据WHERE条件选择性更新
     * @param record
     * @param richTextParam
     * @return
     *
     * @mbg.generated
     */
    int updateByParamSelective(@Param("record") RichTextDO record, @Param("richTextParam") RichTextParam richTextParam);

    /**
     * 根据WHERE条件更新，更新长文本字段
     * @param record
     * @param richTextParam
     * @return
     *
     * @mbg.generated
     */
    int updateByParamWithBLOBs(@Param("record") RichTextDO record, @Param("richTextParam") RichTextParam richTextParam);

    /**
     * 根据WHERE条件更新，不更新长文本字段
     * @param record
     * @param richTextParam
     * @return
     *
     * @mbg.generated
     */
    int updateByParam(@Param("record") RichTextDO record, @Param("richTextParam") RichTextParam richTextParam);

    /**
     * 根据主键选择性更新
     * @param record
     * @return
     *
     * @mbg.generated
     */
    int updateByPrimaryKeySelective(RichTextDO record);

    /**
     * 根据主键更新，更新长文本字段
     * @param record
     * @return
     *
     * @mbg.generated
     */
    int updateByPrimaryKeyWithBLOBs(RichTextDO record);

    /**
     * 根据主键更新，不更新长文本字段
     * @param record
     * @return
     *
     * @mbg.generated
     */
    int updateByPrimaryKey(RichTextDO record);

    /**
     * 批量插入
     * @param records
     * @return
     *
     * @mbg.generated
     */
    int batchInsert(List<RichTextDO> records);
}